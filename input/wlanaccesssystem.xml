<?xml version="1.0" encoding="utf-8"?>
<?xsl-stylesheet type="text/xsl" href="../transforms/xsl/module/module2html.xsl"?>

<?xml-model href="../transforms/schemas/CCModule.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>



<Module boilerplate="yes" target-products="Wireless Local Area Network (WLAN) Access System" 
  name="Wireless Local Area Network (WLAN) Access System"
  xmlns="https://niap-ccevs.org/cc/v1"
  xmlns:sec="https://niap-ccevs.org/cc/v1/section"
  xmlns:h="http://www.w3.org/1999/xhtml">
 
  <PPReference>
    <ReferenceTable>
      <PPVersion>1.0</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2022-03-11</PPPubDate>
      <Keywords>WLAN, Wireless LAN</Keywords>
    </ReferenceTable>
  </PPReference>
  <RevisionHistory>
    <entry>
      <version>1.0</version>
      <date>2022-03-11</date>
      <subject>Initial Release</subject>
    </entry>
    <entry>
      <version>0.5</version>
      <date>2022-01-20</date>
      <subject>Conversion to PP-Module; <h:br/> 
        Updated to include WPA 3 and Wi-Fi 6. <h:br/>
        WPA 3 is required. WPA 2 can additionally be included in the ST.<h:br/>
        256 bit keys are required. 128 and 192 bit keys can additionally be included in the ST.<h:br/>
        Mandated Distributed TOE</subject>
    </entry>
  </RevisionHistory>
  
  
  <!-- TODO: no open items -->
  
  <sec:Introduction>
    <sec:Overview>
      <h:p>
      The scope of this PP-Module is to describe the security functionality of a Wireless Local Area Network (WLAN) Access System (AS) in terms of <xref g='CC'/>
      and to define functional and assurance requirements for such products.
      This PP-Module is intended for use with the following Base-PP:
      <h:ul>
        <h:li>Network Device collaborative Protection Profile (NDcPP) Version 2.2e</h:li>
      </h:ul>
      This Base-PP is valid because a WLAN AS is a device at the edge of a private network that establishes an encrypted IEEE 802.11 link that protects wireless data in transit from disclosure and modification. 
      A network device typically implements this functionality.
      </h:p>
      <!-- 
	   post-process.py cannot find find "access points" and thus will attempt to define
	   AP when it finds it.
      -->
      <h:span style="display:none">Access Point (AP)</h:span>
      <h:p>
      A TOE that conforms to a PP-Configuration containing this PP-Module must be a ‘Distributed TOE’ as
      defined in the NDcPP.
      The expectation for this PP-Module is that a WLAN AS must include a controller and one or more access points (APs).
      </h:p>
      
    </sec:Overview>
    <tech-terms>
      <suppress>Functional Package,Extended Package</suppress>
      <term abbr="AES"   full="Advanced Encryption Standard"/>
      <term abbr="AP"    full="Access Point" plural="APs">
        A device that provides the network interface that enables
        wireless client hosts to access a wired network. </term>
      <term abbr="AS"    full="Access System" plural="ASes"/>
      <term abbr="CBC"   full="Cipher Block Chaining"/>
      <term abbr="CCM"   full="Counter Mode with CBC-Message Authentication Code"/>
      <term abbr="CCMP"  full="CCM mode Protocol"/>
      <term abbr="CTR"   full="Counter (encryption mode)"/>
      <term abbr="EAP"   full="Extensible Authentication Protocol"/>
      <term abbr="GCM"   full="Galois-Counter Mode"/>
      <term abbr="GTK"   full="Group Temporal Key"/>
      <term abbr="IPsec" full="Internet Protocol Security"/>
      <term abbr="MAC"   full="Media Access Control"/>
      <term abbr="NDcPP" full="Network Device collaborative Protection Profile"/>
      <term abbr="PAE"   full="Port Access Entity"/>
      <term abbr="PMK"   full="Pairwise Master Key"/>
      <term abbr="PTK"   full="Pairwise Transient Key"/>
      <term abbr="RADIUS" full="Remote Authentication Dial In User Service"/>
      <term abbr="RBG"   full="Random Bit Generator"/>
      <term abbr="SSID"  full="Service Set Identifier"> 
        The primary name associated with an 802.11
        wireless local area network (WLAN). </term>
      <term abbr="TLS"   full="Transport Layer Security"/>
      <term abbr="WLAN"  full="Wireless Local Area Network"> 
        A wireless computer network that links
        two or more devices using wireless communication to form a local area network within a
        limited area such as a home, school, computer laboratory, campus, office building,
	etc.
      </term>
      <term abbr="WPA"   full="Wi-Fi Protected Access"/>
    </tech-terms>
    <sec:Compliant_Targets_of_Evaluation>
      <sec:TOE_Boundary>
	<h:p>
        This PP-Module specifically addresses WLAN (IEEE 802.11) ASes. A compliant WLAN AS is a
        system composed of hardware and software that is connected to a network and has an infrastructure
        role in the overall enterprise network. In particular, a WLAN AS establishes a secure wireless
        (IEEE 802.11) link that provides an authenticated and encrypted path to an enterprise network and
        thereby decreases the risk of exposure of information transiting “over-the-air”.
	</h:p>
	<h:p>
        Since this PP-Module extends the NDcPP, conformant TOEs are obligated to implement the functionality
        required in the NDcPP along with the additional functionality defined in this PP-Module in
	response to the threat environment discussed subsequently herein.
	</h:p>
      </sec:TOE_Boundary>
    </sec:Compliant_Targets_of_Evaluation>
    
    <sec:Use_Cases>
      <usecases>
        <usecase id="usecase-distributed" title="Distributed System">
          <description>The TOE is a distributed system consisting of multiple network devices that collectively serve as the wireless network endpoint. In addition to claiming the relevant "Distributed TOE" requirement in the NDcPP,
          this use case also requires the TOE to claim the optional SFR FCS_CKM.2/DISTRIB to describe the key distribution method between distributed TOE components.</description>
        </usecase>
      </usecases> 
    </sec:Use_Cases> 
  </sec:Introduction>
  <sec:Conformance_Claims boilerplate="no">
    <cclaims>
      <cclaim name="Conformance Statement">
        <description>
	  <h:p>
	    This PP-Module inherits exact conformance as required from the specified
            Base-PP and as defined in the CC and CEM addenda for Exact Conformance, Selection-Based
          SFRs, and Optional SFRs (dated May 2017).</h:p>
	  <h:p>
            No PPs or PP-Modules may be specified in a PP-Configuration with this PP-Module other than the Base-PP specified
	    in <xref to="Overview"/>.
	  </h:p>
        </description>
      </cclaim>
      <cclaim name="CC Conformance Claims">
        <description>This PP-Module is conformant to Parts 2 (extended) and 3 (conformant) of Common
          Criteria Version 3.1, Release 5 [CC]. </description>
      </cclaim>
      <cclaim name="Package Claims">
        <description>This PP-Module does not
          claim conformance to any packages.</description>
      </cclaim>
    </cclaims>
  </sec:Conformance_Claims>
  <sec:Security_Problem_Description>
    <h:p>
    This PP-Module is written to address the situation when network packets cross the boundary
    between a wired private network and a wireless client via a WLAN AS. The WLAN Access
    System provides secure communication between a user (wireless client) and a wired (trusted) network
    by supporting security functions such as administration, authentication, encryption, and the protection
    and handling of data in transit.
    To protect the data in transit from disclosure and modification, a WLAN
    AS is used to establish secure communications. The WLAN AS provides one end
    of the secure cryptographic tunnel and performs encryption and decryption of network packets in
    accordance with a WLAN AS security policy negotiated with its authenticated wireless client.
    It supports multiple simultaneous wireless connections and is capable of establishing and terminating
    multiple cryptographic tunnels to and from those peers.</h:p>
    <h:p>
    
    The proper installation, configuration, and administration of the WLAN AS are critical to its
    correct operation.</h:p>

    <h:p>
      Note that this PP-Module does not repeat the threats identified in the NDcPP,
      though they all apply given the conformance and hence dependence of this PP-Module on the NDcPP.
      Note also that while the NDcPP contains only threats to the ability of the TOE to provide its
      security functions, this PP-Module addresses only threats to resources in the Operational Environment (OE).
      Together the threats of the NDcPP and those defined in this PP-Module define the comprehensive set of
      security threats addressed by a WLAN AS TOE. 
    </h:p>
    <sec:Threats>
      <threats>
        <threat name="T.NETWORK_DISCLOSURE">
          <description>Devices on a protected network may be exposed to threats presented by devices located outside the
            protected network, which may attempt to conduct unauthorized activities. If malicious external devices
            are able to communicate with devices on the protected network, or if devices on the protected network
            can establish communications with those external devices
	    (e.g., as a result of nonexistent or insufficient  WLAN data encryption that exposes the WLAN data in
	    transit to rogue elements), then those internal
            devices may be susceptible to the unauthorized disclosure of information.</description>
          <consistency-rationale>This threat extends the security problem defined by the Base-PP to include the threat of a malicious entity in an untrusted network interacting with a protected entity in a trusted network. 
            This is not addressed in the Base-PP because not all network devices are responsible for facilitating communications between separate networks. This threat is also consistent with the T.UNTRUSTED_COMMUNICATION_CHANNELS
            threat defined by the Base-PP because compromise of data in transit is one potential way this threat may be exploited.</consistency-rationale>
          <objective-refer ref="O.AUTHENTICATION">
            <rationale>The threat T.NETWORK_DISCLOSURE is countered by O.AUTHENTICATION as proper authentication of external entities 
              ensures that network data is not disclosed to an unauthorized subject.
	    </rationale>
          </objective-refer>
          <objective-refer ref="O.CRYPTOGRAPHIC_FUNCTIONS">
            <rationale>The threat T.NETWORK_DISCLOSURE is countered by O.CRYPTOGRAPHIC_FUNCTIONS as implementation of cryptographic functions ensures 
              that network data is not subject to unauthorized disclosure in transit.</rationale>
          </objective-refer>
        </threat>

        <threat name="T.NETWORK_ACCESS">
          <description>Devices located outside the protected network may seek to exercise services located on the protected
            network that are intended to be only accessed from inside the protected network or only accessed by
            entities using an authenticated path into the protected network.</description>
          <consistency-rationale>This threat extends the security problem defined by the Base-PP to include the threat of a malicious entity in an untrusted network interacting with a protected entity in a trusted network. 
            This is not addressed in the Base-PP because not all network devices are responsible for facilitating communications between separate networks.</consistency-rationale>
          <objective-refer ref="O.AUTHENTICATION">
            <rationale>
	      The threat T.NETWORK_ACCESS is countered by O.AUTHENTICATION as proper
	      authentication methods ensure that subjects outside the protected network 
              cannot access data inside the protected network until the TSF has authenticated them.
	    </rationale>
          </objective-refer>
          <objective-refer ref="O.TOE_ADMINISTRATION">
            <rationale>The threat T.NETWORK_DISCLOSURE is countered by O.TOE_ADMINISTRATION as the TOE's administration function 
              does not permit execution of management functions that originate from wireless clients outside the protected network.</rationale>
          </objective-refer>
        </threat>

        <threat name="T.TSF_FAILURE">
          <description>Security mechanisms of the TOE generally build up from a primitive set of mechanisms (e.g., memory
            management, privileged modes of process execution) to more complex sets of mechanisms. Failure of
            the primitive mechanisms could lead to a compromise in more complex mechanisms, resulting in a
            compromise of the TSF. 
          </description>
          <consistency-rationale>This threat is an extension of the T.SECURITY_FUNCTIONALITY_FAILURE threat defined by the Base-PP.</consistency-rationale>
          <objective-refer ref="O.FAIL_SECURE">
            <rationale>
	      The threat T.TSF_FAILURE is countered by O.FAIL_SECURE as the TOE responds to self-test
	      failures that are significant enough to show a potential compromise of the TSF by making
	      the TSF unavailable until the failure state has been cleared.
	    </rationale>
          </objective-refer>
          <objective-refer ref="O.SYSTEM_MONITORING">
            <rationale>The threat T.TSF_FAILURE is countered by O.SYSTEM_MONITORING as the TOE generates audit records of unauthorized usage, communications outages, incorrect configuration, and other behaviors that may indicate a degraded ability to enforce its intended security
            functionality so that issues can be diagnosed and resolved appropriately.</rationale>
          </objective-refer>
        </threat>
        
        <threat name="T.DATA_INTEGRITY">
          <description>Devices on a protected network may be exposed to threats presented by devices located outside the
            protected network, which may attempt to modify the data without authorization. If known malicious
            external devices are able to communicate with devices on the protected network or if devices on the
            protected network can establish communications with those external devices then the data contained
            within the communications may be susceptible to a loss of integrity.</description>
          <consistency-rationale>This threat is a specific type of failure that may result from successful exploitation of the T.WEAK_CRYPTOGRAPHY threat defined by the Base-PP. 
            It is an extension of the Base-PP threat for communications that are specific to this PP-Module.</consistency-rationale>
          <objective-refer ref="O.CRYPTOGRAPHIC_FUNCTIONS">
            <rationale>The threat T.DATA_INTEGRITY is countered by O.CRYPTOGRAPHIC_FUNCTIONS as the TOE uses cryptographic functionality to enforce the integrity of protected data in transit.</rationale>
          </objective-refer>
        </threat>
        
        <threat name="T.REPLAY_ATTACK">
          <description>If an unauthorized individual successfully gains access to the system, the adversary may have the
            opportunity to conduct a “replay” attack. This method of attack allows the individual to capture packets
            traversing throughout the wireless network and send the packets at a later time, possibly unknown by
            the intended receiver.</description>
          <consistency-rationale>This threat is a specific type of failure that may result from successful exploitation of the T.UNAUTHORIZED_ADMINISTRATOR_ACCESS and T.UNTRUSTED_COMMUNICATIONS_CHANNELS threats defined by the Base-PP. 
            It is an extension of the Base-PP threat for communications that are specific to this PP-Module.</consistency-rationale>
          <objective-refer ref="O.AUTHENTICATION">
            <rationale>
	      The threat T.REPLAY_ATTACK is countered by O.AUTHENTICATION as the TOE's use of
	      authentication mechanisms prevent replay attacks because the source of the attack
	      will not have the proper authentication data for the TSF to process the replayed traffic.
	    </rationale>
          </objective-refer>
          <objective-refer ref="O.CRYPTOGRAPHIC_FUNCTIONS">
            <rationale>The threat T.REPLAY_ATTACK is countered by O.CRYPTOGRAPHIC_FUNCTIONS as the TOE's use of cryptographic functionality prevents impersonation attempts that use replayed traffic.</rationale>
          </objective-refer>
        </threat>

      </threats>
    </sec:Threats>
    <sec:Assumptions>
      All assumptions for the OE of the Base-PP also apply to this PP-Module.
      A.NO_THRU_TRAFFIC_PROTECTION is still operative, but only for the interfaces in the TOE that are
      defined by the Base-PP and not the PP-Module.      
      <assumptions>
        <assumption name="A.CONNECTIONS">
          <description> It is assumed that the TOE is connected to distinct networks in a manner
            that ensures that the TOE's security policies will be enforced on all applicable network
            traffic flowing among the attached networks. </description>
          <consistency-rationale>The Base-PP does not define where in a particular network architecture a network device must be deployed since it is designed to be generic to various types of network devices. This PP-Module
            defines the expected architectural deployment specifically for WLAN AS network devices.</consistency-rationale>
          <objective-refer ref="OE.CONNECTIONS">
            <rationale> The OE objective OE.CONNECTIONS is realized through A.CONNECTIONS.</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </sec:Assumptions>
    <sec:Organizational_Security_Policies>
      <!-- This PP-Module defines no additional organizational security policies beyond those specified in the NDcPP. -->
      <OSPs/>
    </sec:Organizational_Security_Policies>
  </sec:Security_Problem_Description>
  <sec:Security_Objectives>
    <sec:Security_Objectives_for_the_TOE>

      <SOs>
        <SO name="O.CRYPTOGRAPHIC_FUNCTIONS">
          <description>The TOE will provide means to encrypt and decrypt data to maintain confidentiality and allow for detection of modification of TSF data that is transmitted outside the TOE.
          </description>
          <consistency-rationale>
            The Base-PP does not define TOE objectives, but it does define requirements for cryptographic functions.
			This objective is consistent with the functional behavior required by the Base-PP.
	  </consistency-rationale>
	  <addressed-by>FCS_COP.1/DataEncryption (modified from Base-PP)</addressed-by>
	  <rationale>
	    FCS_COP.1/DataEncryption supports the objective by requiring the TSF to implement AES in the modes needed to support its other functions.
	  </rationale>
  <!-- 	  <addressed-by> FCS_IPSEC_EXT.1 (from Base-PP)</addressed-by> -->
  <!-- 	  <rationale> -->
  <!--   FCS_IPSEC_EXT.1 supports the objective by requiring the TSF to use IPsec to implement a trusted communications channel if selected in FTP_ITC.1.  -->
  <!-- </rationale> -->
  <!-- 			<addressed-by> FCS_TLSC_EXT.1 (from Base-PP)</addressed-by> -->
  <!-- <rationale> -->
  <!--   FCS_TLSC_EXT.1 supports the objective by requiring the TSF to use RADIUS over TLS (RadSec) to implement a trusted communications channel if selected in FTP_ITC.1. -->
  <!-- </rationale> -->
  <!-- <addressed-by> FCS_TLSC_EXT.2 (from Base-PP)</addressed-by> -->
  <!-- <rationale> -->
  <!--   FCS_TLSC_EXT.2 supports the objective by requiring the TSF to use X.509v3 certificates as the authentication method used for RadSec. -->
  <!-- </rationale> -->
  <addressed-by> FCS_CKM.1/WPA</addressed-by>
  <rationale>
    FCS_CKM.1/WPA supports the objective by requiring the TSF to generate symmetric keys used for WPA2. 
  </rationale>
  <addressed-by> FCS_CKM.2/GTK</addressed-by>
  <rationale>
    FCS_CKM.2/GTK supports the objective by requiring the TSF to distribute group temporal keys used for IEEE 802.11.
  </rationale>
  <addressed-by> FCS_CKM.2/PMK</addressed-by>
  <rationale>
    FCS_CKM.2/PMK supports the objective by requiring the TSF to distribute pairwise master keys used for IEEE 802.11.
  </rationale>
  <addressed-by>FCS_CKM.2/DISTRIB (optional)</addressed-by>
  <rationale>
    FCS_CKM.2/DISTRIB supports the objective by optionally requiring the TSF to distribute IEEE 802.11 keys to any distributed TOE components using a secured method. 
  </rationale>
          <addressed-by>FPT_ITT.1 (from Base-PP)</addressed-by>
          <rationale>
            FPT_ITT.1 supports the objective by requiring the TSF to implement trusted communications between its distributed components.
          </rationale>

		  </SO>
            
              <SO name="O.AUTHENTICATION">
                <description>The TOE will provide a means to authenticate the user to ensure they are communicating with an authorized external IT entity.
                </description>
                <consistency-rationale>The Base-PP does not define TOE objectives, but it does define requirements for authentication of both users and remote entities. 
                  This objective is consistent with the functional behavior required by the Base-PP.
				</consistency-rationale>
  <!-- <addressed-by>FCS_IPSEC_EXT.1 (from Base-PP)</addressed-by> -->
  <!-- <rationale> -->
  <!--   FCS_IPSEC_EXT.1 supports the objective by optionally requiring the TSF to use IPsec to implement a trusted communications channel if selected in FTP_ITC.1.  -->
  <!--   IPsec includes authenticating using X.509v3 certificates or pre-shared keys. -->
  <!-- </rationale> -->
  <!-- <addressed-by>FCS_TLSC_EXT.1 (from Base-PP)</addressed-by> -->
  <!-- <rationale> -->
  <!--   FCS_TLSC_EXT.1 supports the objective by optionally requiring the TSF to use RADIUS over TLS (RadSec) to implement a trusted communications channel if selected in FTP_ITC.1.  -->
  <!--   TLS includes authenticating using X.509v3 certificates or pre-shared keys. -->
  <!-- </rationale> -->
  <!-- <addressed-by>FCS_TLSC_EXT.2 (from Base-PP)</addressed-by> -->
  <!-- <rationale> -->
  <!--   FCS_TLSC_EXT.2 supports the objective by optionally requiring the TSF to use X.509v3 certificates as the authentication method used for RadSec.  -->
  <!-- </rationale> -->
  <!-- <addressed-by>FIA_X509_EXT.1/Rev (from Base-PP)</addressed-by> -->
  <!-- <rationale> -->
  <!--   FIA_X509_EXT.1/Rev supports the objective by optionally requiring the TSF to implement X.509v3 certificate validation if certificates are used for authentication.  -->
  <!-- </rationale> -->
  <!-- <addressed-by>FTP_ITC.1 (modified from Base-PP)</addressed-by> -->
  <!-- <rationale> -->
  <!--   FTP_ITC.1 supports the objective by requiring the TSF to identify the trusted communications channels it implements, each of which is able to support authentication. -->
  <!-- </rationale> -->
  <addressed-by>FCO_CPC_EXT.1 (from Base-PP)</addressed-by>
  <rationale>
    FCO_CPC_EXT.1 supports the objective by requiring the TSF to implement a mechanism that authenticates its distributed components to each other.
  </rationale>
  <addressed-by>FIA_8021X_EXT.1</addressed-by>
  <rationale>
    FIA_8021X_EXT.1 supports the objective by requiring the TSF to act as the authenticator for 802.1X authentication.
  </rationale>
  <addressed-by>FIA_UAU.6</addressed-by>
  <rationale>
    FIA_UAU.6 supports the objective by requiring the TSF to re-authenticate a security administrator under certain circumstances.
  </rationale>
  <addressed-by>FTA_TSE.1</addressed-by>
  <rationale>
    FTA_TSE.1 supports the objective by requiring the TSF to deny the establishment of a wireless client session for reasons unrelated to the correctness of an authentication credential.
  </rationale>
  <addressed-by>FCS_RADSEC_EXT.1 (selection-based)</addressed-by>
  <rationale>
    FCS_RADSEC_EXT.1 supports the objective by optionally requiring the TSF to implement RadSec in accordance with a defined specification.
  </rationale>
  <addressed-by>FCS_RADSEC_EXT.2 (selection-based)</addressed-by>
  <rationale>
    FCS_RADSEC_EXT.2 supports the objective by optionally requiring the TSF to implement RadSec using pre-shared keys if that is the method chosen for peer authentication.
  </rationale>
  <addressed-by>FIA_PSK_EXT.1 (selection-based)</addressed-by>
  <rationale>
    FIA_PSK_EXT.1 supports the objective by optionally requiring the TSF to implement pre-shared key authentication if any trusted protocols require its use. 
  </rationale>

		  
		  </SO>
              
                <SO name="O.FAIL_SECURE">
                  <description>Upon a self-test failure, the TOE will shut down to ensure that data cannot be passed without adhering to the TOE's security policies.
                  </description>
                  <consistency-rationale>The Base-PP does not define TOE objectives, but it does define requirements for self-testing. 
                    This PP-Module is consistent with that by defining an objective to enter a secure state if a self-test does fail.</consistency-rationale>
                  <addressed-by>FPT_TST_EXT.1 (modified from Base-PP)</addressed-by>
                  <rationale>
                    FPT_TST_EXT.1 supports the objective by requiring the TSF to perform self-tests that may aid in the detection of a TSF failure.
                  </rationale>
				  <addressed-by>FPT_FLS.1</addressed-by>
				  <rationale>
                    FPT_FLS.1 supports the objective by requiring the TSF to preserve a secure state in the event of a self-test failure.
                  </rationale>
                </SO>
  
                  <SO name="O.SYSTEM_MONITORING">
                    <description>The TOE will provide a means to audit events specific to WLAN functionality and security.
                    </description>
                    <consistency-rationale>The Base-PP does not define TOE objectives, but it does define requirements for auditing. 
                      This PP-Module is consistent with that by ensuring that auditable events are appropriately defined for 
                      the WLAN AS capability.</consistency-rationale>
                    <addressed-by>FAU_GEN.1/WLAN</addressed-by>
                    <rationale>
                      FAU_GEN.1/WLAN supports the objective by requiring the TSF to generate audit records for security-relevant WLAN behavior.
                    </rationale>
                    <addressed-by>FAU_GEN_EXT.1 (modified from Base-PP)</addressed-by>
                    <rationale>
                      FAU_GEN_EXT.1 supports the objective by requiring the TSF to generate appropriate security-relevant auditable events on each of its distributed components.
                    </rationale>
                    <addressed-by>FAU_STG_EXT.1 (modified from Base-PP)</addressed-by>
                    <rationale>
                      FAU_STG_EXT.1 supports the objective by defining how distributed TOE components store their generated audit records.
                    </rationale>
                  </SO>
                  
                    <SO name="O.TOE_ADMINISTRATION">
                      <description>The TOE will provide the functions necessary to address failed authentication attempts by a remote administrator.
                      </description>
                      <consistency-rationale>The Base-PP does not define TOE objectives, but it does define requirements for management. This PP-Module is consistent with that by applying security restrictions on how the TOE's
                        management interface can be invoked.</consistency-rationale>
                      <!-- <addressed-by>FIA_AFL.1 (from Base-PP)</addressed-by> -->
                      <!-- <rationale> -->
                      <!--   FIA_AFL.1 supports the objective by requiring the TSF to block authentication if there is evidence of an attempt to compromise an administrator account through brute force. -->
		      <!-- 				</rationale> -->
						<addressed-by>
							FMT_SMR_EXT.1
						</addressed-by>
						<rationale>
							FMT_SMR_EXT.1 supports the objective by requiring the TSF to prevent any administrative actions that originate from the 'external' network.</rationale>
 						<addressed-by>FMT_SMF.1/AccessSystem</addressed-by>
						<rationale>FMT_SMF.1/AccessSystem supports the objective by defining management functionality that is specific to WLAN AS devices.</rationale>
                    </SO>
  
      </SOs>
      </sec:Security_Objectives_for_the_TOE>
      
    <sec:Security_Objectives_for_the_Operational_Environment>
      All objectives for the OE of the Base-PP also apply to this PP-Module.
      OE.NO_THRU_TRAFFIC_PROTECTION is still operative, but only for the interfaces in the TOE that are
      defined by the Base-PP and not the PP-Module.
      
      <SOEs>
        <SOE name="OE.CONNECTIONS">
          <description> TOE administrators will ensure that the TOE is installed in a manner that
            will allow the TOE to effectively enforce its policies on the network traffic of
            monitored networks. </description>
          <consistency-rationale>The Base-PP does not define where in a particular network architecture a network device must be deployed since it is designed to be generic to various types of network devices. This PP-Module
            defines the expected architectural deployment specifically for WLAN AS network devices.</consistency-rationale>
        </SOE>
      </SOEs>
    </sec:Security_Objectives_for_the_Operational_Environment>
    <sec:Security_Objectives_Rationale>
      <!-- NOTE: This section should remain empty and is populated from the rationale tags in the previous sections.  -->
    </sec:Security_Objectives_Rationale>
  </sec:Security_Objectives>
  <sec:Security_Requirements>
    <base-pp id="ND" version="2.2e" name="Network Device" product="Network Device" short="ND" plural="NDs">
      <url><![CDATA[https://www.niap-ccevs.org/profile/Info.cfm?PPID=447&id=447]]></url>
  	  <cPP/>
      <modified-sfrs>
 

        <sec:from_nd_fcs title="Cryptographic Support (FCS)">
          <f-component cc-id="fcs_cop.1" name="Cryptographic Operation (AES Data Encryption/Decryption)" iteration="DataEncryption"> 
            <consistency-rationale>This PP-Module modifies the Base-PP's definition of the SFR by adding additional AES modes consistent with the standards referenced in the Base-PP and by mandating specific selections that are
            relevant to the technology type of the PP-Module.</consistency-rationale>
            <f-element>
              <title>
                
                The TSF shall perform encryption/decryption in accordance
                with a specified cryptographic algorithm AES used in <h:b>CBC, CCMP, </h:b> and <selectables>
                  <selectable>CTR</selectable>
                  <selectable>GCM</selectable>
                  <selectable><h:b>GCMP</h:b></selectable>
                  <selectable exclusive="yes"><h:b>no other</h:b></selectable>
                </selectables> <h:b>modes</h:b> and cryptographic key sizes <h:b>256 bits and</h:b> <selectables>
                  <selectable>128 bits</selectable>
                  <selectable>192 bits</selectable>
                  <selectable exclusive="yes"><h:b>no other key sizes</h:b></selectable>
                </selectables> that meet the following: AES as specified in ISO 18033-3, 
                <h:b>CBC as specified in ISO 10116, 
                  CCMP as specified in NIST SP 800-38C and IEEE 802.11-2020,</h:b> <selectables>
                    <selectable>CTR as specified in ISO 10116</selectable>
                    <selectable>GCM as specified in ISO 19772</selectable>
                    <selectable><h:b>GCMP as specified in NIST SP 800-38D and IEEE 802.11ax-2021</h:b></selectable>
                    <selectable exclusive="yes"><h:b>no other standards</h:b></selectable>
                  </selectables>. 
              </title>
              <note role="application">
                <h:p>
                  This requirement is modified from its definition in the NDcPP by mandating the selection of
		  CBC mode and 256 bit key sizes while also defining additional AES mode and key size selections
		  not present in the original definition.
		</h:p>
		<h:p>
                  This requirement mandates two modes for AES with a key size of 256 bits being implemented.
		  It is not expected that these modes will both be used for all encryption and decryption functionality.
		  Rather, the mandates serve particular purposes: to comply with the FCS_IPSEC_EXT.1 requirements,
		  CBC mode is mandated, and to comply with IEEE 802.11-2020, AES-CCMP
		  (which uses AES in CCM as specified in SP 800-38C) must be implemented.
		</h:p>
		<h:p>
                  For the first selection of FCS_COP.1.1/DataEncryption, the ST author should choose the additional mode or modes in which AES operates.
		  For the second selection, the ST author should choose the key sizes that are supported by this functionality.
		  256-bit CCMP is required in order to comply with FCS_CKM.1/WPA.
		  Note that optionally AES-CCMP-192, AES-CCMP-128, AES-GCMP-192, and AES-GCMP-128 with cryptographic key size of 256 bits, may be implemented for IEEE 802.11ax-2021 connections.
		  In the future, one of these modes may be required.
		</h:p>
		<h:p>
                  CTR mode is not used for WLAN AS capabilities but remains selectable since it may be required by another part of the TSF.
		</h:p>
              </note>
              <aactivity>
                <TSS>There are no additional TSS evaluation activities for this component beyond what the NDcPP requires.<h:br/><h:br/></TSS>
                <Guidance>There are no additional guidance evaluation activities for this component beyond what the NDcPP requires.<h:br/><h:br/></Guidance>
                <Tests>
		  In addition to the tests required by the NDcPP, the evaluator will perform the following testing:
		<h:p>
                  <h:b>AES-CCM Tests</h:b></h:p>
		  <h:p>
                  The evaluator will test the generation-encryption and decryption-verification functionality of AES-CCM for the following input parameter and tag lengths:</h:p>
		  <h:p>
                  <h:b>128 bit and 256 bit keys</h:b></h:p>
		  <h:p>
                  <h:b>Two payload lengths</h:b>. One payload length will be the shortest supported payload length,
                  greater than or equal to zero bytes. The other payload length will be the longest supported
                  payload length, less than or equal to 32 bytes (256 bits).</h:p>
		  <h:p>
                    <h:b>Two or three associated data lengths</h:b>.
		    One associated data length will be 0, if supported.
		    One associated data length will be the shortest supported payload length,
		    greater than or equal to
                    zero bytes.
		    One associated data length will be the longest supported payload length, less than
                    or equal to 32 bytes (256 bits).
		    If the implementation supports an associated data length of 216
                    bytes, an associated data length of 216 bytes will be tested.
		  </h:p>
		  <h:p>
                    <h:b>Nonce lengths</h:b>.
		    All supported nonce lengths between 7 and 13 bytes, inclusive, will be tested.
		  </h:p>
		  <h:p>
                    <h:b>Tag lengths</h:b>.
		    All supported tag lengths of 4, 6, 8, 10, 12, 14, and 16 bytes will be tested.
		  </h:p>
		  <h:p>
                    Due to the restrictions that IEEE 802.11 specifies for this mode
		    (nonce length of 13 and tag length of 8),
                    it is acceptable to test a subset of the supported lengths as long as the selections
		    fall into the ranges specified above.
		    In this case, the evaluator will ensure that these are the only supported lengths.
                    To test the generation-encryption functionality of AES-CCM, the evaluator will
		    perform the following four tests:
		  </h:p>
		  <h:p>
                  <testlist>
                    <test>For each supported key and associated data length and any supported payload, nonce
                      and tag length, the evaluator will supply one key value, one nonce value and 10 pairs of
                      associated data and payload values, and obtain the resulting ciphertext.</test>
                    <test>For each supported key and payload length and any supported associated data, nonce
                      and tag length, the evaluator will supply one key value, one nonce value and 10 pairs of
                      associated data and payload values, and obtain the resulting ciphertext.</test>
                    <test>For each supported key and nonce length and any supported associated data, payload,
                      and tag length, the evaluator will supply one key value and 10 associated data, payload and
                      nonce value 3-tuples, and obtain the resulting ciphertext.</test>
                    <test>For each supported key and tag length and any supported associated data, payload, and
                      nonce length, the evaluator will supply one key value, one nonce value and 10 pairs of
                      associated data and payload values and, obtain the resulting ciphertext</test>
                  </testlist>
                  To determine correctness in each of the above tests, the evaluator will compare the ciphertext with the
                  result of generation-encryption of the same inputs with a known good implementation.</h:p>
		  <h:p>
                  To test the decryption-verification functionality of AES-CCM, for each combination of supported
                  associated data length, payload length, nonce length, and tag length, the evaluator will supply a key
                  value and 15 nonce, associated data and ciphertext 3-tuples, and obtain either a fail result or a pass
                  result with the decrypted payload.
		  The evaluator will supply 10 tuples that should fail and 5 that should pass per set of 15.
		  </h:p>
		  <h:p>
                  Additionally, the evaluator will use tests from the IEEE 802.11-02/362r6 document “Proposed Test
                  vectors for IEEE 802.11 TGi”, dated September 10, 2002, Section 2.1 AES-CCMP Encapsulation Example
                  and Section 2.2 Additional AES-CCMP Test Vectors to verify further the IEEE 802.11-2020
                  implementation of AES-CCMP.
		  </h:p>
                </Tests>
              </aactivity>
            </f-element>
          </f-component>
          
        </sec:from_nd_fcs>
        
        <sec:from_nd_fpt title="Protection of the TSF (FPT)">
          <f-component cc-id="fpt_tst_ext.1" name="TSF Testing">
            <consistency-rationale>This PP-Module modifies the Base-PP's definition of the SFR by defining a minimum baseline for what self-tests must be run. Additional self-tests
              may still be specified by the ST author.</consistency-rationale>
            <f-element>
              <title>
                The TSF shall run a suite of the following self-tests <h:b>during initial start-up (on power on) and </h:b> <selectables>
                  <selectable>periodically during normal operation</selectable>
                  <selectable>at the request of the authorized user</selectable>
                  <selectable>at the conditions <assignable>conditions under which self-tests should occur</assignable></selectable>
                  <selectable exclusive="yes"><h:b>in no other circumstances</h:b></selectable>
                </selectables> to demonstrate the correct operation of the TSF: <h:b>integrity verification of stored TSF executable code when it is loaded for execution
                through the use of the TSF-provided cryptographic service specified in FCS_COP.1/SigGen, <selectables>
                  <selectable><assignable>list of additional self-tests run by the TSF</assignable></selectable>
                  <selectable exclusive="yes">no other self-tests</selectable>
                </selectables></h:b>.
              </title>
              <note role="application">This SFR is modified from its definition in the NDcPP by mandating that self-testing occur at power on and that the self-testing must include, at minimum,
              an integrity test using a digital signature. FCS_COP.1/SigGen is defined in the NDcPP.</note>
              <aactivity>
                The evaluator will perform the following activities in addition to those required by the NDcPP:<h:br/><h:br/>
                <TSS>
		    The evaluator will examine the TSS to ensure that it describes how to verify the integrity of stored TSF
                  executable code when it is loaded for execution, which includes the generation and protection of the
                  “check value” used to ensure integrity as well as the verification step.
		  This description will also cover the digital signature service used in performing these functions.
		  The evaluator also checks the operational guidance to ensure that any actions
		  required by the administrator to initialize or operate
                  this functionality are present.<h:br/><h:br/>
                    The evaluator will also ensure that the TSS or operational guidance describes the actions that take place for successful and unsuccessful execution of the integrity test.
		  <h:br/><h:br/>
		  </TSS>
                <Guidance>The evaluator will ensure that the TSS or operational guidance describes the actions that take place for 
			successful and unsuccessful execution of the integrity test.<h:br/><h:br/>
		</Guidance>
                <Tests>The evaluator will perform the following tests:
                <testlist>
                  <test>Following the operational guidance, the evaluator will initialize the integrity protection system.
                    The evaluator will perform actions to cause TSF software to load and observe that the integrity
                    mechanism does not flag any executables as containing integrity errors.
                  </test>
                  <test>
		    The evaluator will modify the TSF executable and cause that executable to be loaded by the TSF.
		    The evaluator will observe that an integrity violation is triggered (care must be taken so that the
                    integrity violation is determined to be the cause of the failure to load the module and not the fact that
                    the module was modified so that it was rendered unable to run because its format was corrupt).
                  </test>
                </testlist></Tests>
              </aactivity>
            </f-element>
          </f-component>
        </sec:from_nd_fpt>
        
        <sec:from_nd_ftp title="Trusted Path/Channels (FTP)">
          <f-component cc-id="ftp_itc.1" name="Inter-TSF Trusted Channel">
            <consistency-rationale>This PP-Module modifies the Base-PP's definition of the SFR by specifying a minimum baseline of required communications protocols and also includes additional protocols not originally
              defined by the Base-PP. The original protocols specified in the Base-PP may still be selected by the ST author.</consistency-rationale>
            <f-element>
              <title>The TSF shall be capable of using <h:b>IEEE 802.1X, <selectables>
                <selectable id="s-ipsec">IPsec</selectable>
                <selectable id="s-radius">RADIUS over TLS</selectable>
              </selectables>, and</h:b> <selectables>
                  <selectable>SSH</selectable>
                  <selectable>TLS</selectable>
                  <selectable>DTLS</selectable>
                  <selectable>HTTPS</selectable>
                  <selectable exclusive="yes"><h:b>no other protocols</h:b></selectable>
                </selectables> to provide a trusted communication channel
                between itself and authorized IT entities supporting the following capabilities: <h:b>802.1X authentication server,</h:b> audit
                server, <selectables>
                  <selectable>authentication server</selectable>
                  <selectable><assignable>other capabilities</assignable></selectable>
                  <selectable exclusive="yes">no other capabilities</selectable>
                </selectables> that is logically distinct
                from other communication channels and provides assured identification of its end points and protection
                of the channel data from disclosure and detection of modification of the channel data.
              </title>
              <note role="application">
                <h:p>
                  This requirement has been modified from its definition in the NDcPP to 
                  mandate the communications protocols and environmental components that 
                  a WLAN AS must use for infrastructure communications
                  (802.11 support is also required for wireless client communications, but this is covered
                  by the FTP_ITC.1/Client).
                  IPsec or RADIUS over TLS (commonly known as "RadSec") is required at least for communications with the 802.1X authentication server.
                  Other selections may be made if needed by other parts of the TSF.
                  The requirement implies that not only are communications protected when they are initially established,
                  but also on resumption after an outage.</h:p>
                <h:p>
                   The IT entity of "802.1X authentication server" is distinct from "authentication server"
                   because the latter may be used for administrator authentication rather 
                   than authorization of WLAN clients.
                </h:p><h:p>
                   If <xref to="s-ipsec"/> is selected in FTP_ITC.1.1, then FCS_IPSEC_EXT.1 from the NDcPP must be claimed.
                   If <xref to="s-radius"/> is selected in FTP_ITC.1.1,
                   then FCS_RADSEC_EXT.1 in this PP-Module must be claimed, as well as FCS_TLSC_EXT.1 from the NDcPP.
                </h:p>
              </note>
            </f-element>
            <f-element>
              <title>The TSF shall permit the TSF or the authorized IT entities to initiate communication via the trusted channel.</title>
            </f-element>
            <f-element>
              <title>The TSF shall initiate communication via the trusted channel for <assignable>list of services for which the TSF is able to initiate communications</assignable>.</title>
            <aactivity>
                The evaluator will perform the following activities in addition to those required by the NDcPP:<h:br/><h:br/>
                <TSS>
		  The evaluator will examine the TSS to determine that, for all communications with authorized IT
                  entities identified in the requirement, each communications mechanism is identified in terms of the
                  allowed protocols for that IT entity.
		  The evaluator will also confirm that all protocols listed in the TSS
                  are specified and included in the requirements in the ST.<h:br/><h:br/>
		</TSS>
                <Guidance>The evaluator will confirm that the guidance documentation contains instructions for establishing the
                  allowed protocols with each authorized IT entity and that it contains recovery instructions should a
                  connection be unintentionally broken.<h:br/><h:br/>
                </Guidance>
                <Tests>The evaluator will perform the following tests:
                  <testlist>
                    <test>The evaluator will ensure that communications using each protocol with each authorized IT
                      entity is tested during the course of the evaluation, setting up the connections as described in the
                      guidance documentation and ensuring that communication is successful. </test>
                    <test>For each protocol that the TOE can initiate as defined in the requirement, the evaluator will
                      follow the guidance documentation to ensure that the communication channel can be initiated
                      from the TOE. </test>
                    <test>The evaluator will ensure, for each communication channel with an authorized IT entity, the
                      channel data is not sent in plaintext.</test>
                    <test>The evaluator will, for each protocol associated with each authorized IT entity tested during
                      test 1, physically interrupt an established connection. The evaluator will ensure that when physical
                      connectivity is restored, communications are appropriately protected.</test>
                  </testlist>
                </Tests>
              </aactivity>
            </f-element>
          </f-component>
        </sec:from_nd_ftp>


      <sec:from_nd_fau title="Security Audit (FAU)">
	<f-component cc-id="fau_stg_ext.1"
		     name="Protected Audit Event Storage">
	  <consistency-rationale>
	    This PP-Module modifies a Base-PP SFR by restricting the selection options to a subset of those defined in the Base-PP.
	  </consistency-rationale>
	  <f-element><title>
	    The TSF shall be able to transmit the generated audit data to an external
	    IT entity using a trusted channel according to FTP_ITC.1.
	  </title>
	  <note role="application">
	    <h:p>
For selecting the option of transmission of generated audit data to an external IT entity the
TOE relies on a non-TOE audit server for storage and review of audit records. The storage of
these audit records and the ability to allow the Administrator to review these audit records is
provided by the operational environment in that case. Since the external audit server is not
part of the TOE, there are no requirements on it except the capabilities for FTP_ITC.1
transport for audit data. No requirements are placed upon the format or underlying protocol
of the audit data being transferred. The TOE must be capable of being configured to transfer
audit data to an external IT entity without Administrator intervention. Manual transfer would
not meet the requirements. Transmission could be done in real-time or periodically. If the
transmission is not done in real-time then the TSS describes what event stimulates the
transmission to be made and what range of frequencies the TOE supports for making transfers
of audit data to the audit server, the TSS also suggests typical acceptable frequencies for the
transfer.
	    </h:p>
	    <h:p>
Each component must be able to export audit data across a protected
channel external (FTP_ITC.1) or intercomponent (FPT_ITT.1 or FTP_ITC.1) as appropriate.
At least one component of the TOE must be able to export audit records via FTP_ITC.1 such
that all TOE audit records can be exported to an external IT entity.
An "external IT entity" (physical or virtualized) is another device or computer on the network
in which the TOE no longer has access to the audit records.
This can be a physical or virtualized entity.
	    </h:p>
	  </note></f-element>
	  <f-element>
	    <title>The TSF shall be able to store generated audit data on the TOE itself
	    <selectables>
	      <selectable id="s-local-audit">
		<snip>on the following TOE components</snip>: 
		<assignable>identification of TOE components</assignable>
	      </selectable>
	      <selectable id="s-external-audit">
		<snip>with storage of audit data provided externally</snip> for
	    the following TOE components: <assignable>list of TOE components that do not store
	    audit data locally and the other TOE components to which they transmit their generated
	    audit data</assignable>
	      </selectable>
	    </selectables>.
	    </title>
	    <note role="application">
	      <h:p>
	      If some TOE components are not storing audit data locally,
	      the option <xref to="s-external-audit"/> must be selected in addition to the 
	      option <xref to="s-local-audit"/>. 
	      In that case FAU_STG_EXT.5 must be claimed in the ST in addition to
	      FAU_GEN_EXT.1 and FAU_STG_EXT.4.
	      For the option <xref to="s-external-audit"/> the TOE components that to not
	      store audit data locally shall be mapped to the TOE components to which 
	      they transmit their generated audit data.
	      </h:p>

	      <h:p>
This SFR can be fulfilled either by every TOE component storing its own
security audit data locally or by one or more TOE components storing audit data locally and
other TOE components which are not storing audit information locally sending security audit
data to other TOE components for local storage. For the transfer of security audit data between
TOE components a protected channel according to FTP_ITC.1 or FPT_ITT.1 (Base-PP) must be used.
The TSS describe which TOE components store security audit data locally and which TOE
components do not store security audit data locally. For the latter, the TSS describe at which
other TOE component the audit data is stored locally.
	      </h:p>
	    </note>
	  </f-element>
	  <f-element><title>
	    The TSF shall 
	    <selectables>
	      <selectable>drop new audit data</selectable>
	      <selectable id="s-overwrite"><snip>overwrite previous audit records </snip>
	      according to the following rule: 
	      <assignable>rule for overwriting previous audit records</assignable></selectable>
	      <selectable id="s-otheractions"><assignable>other action</assignable></selectable>
	    </selectables>when the local storage space for audit data is full.
	  </title>
	  <aactivity>
<TSS>
	      <h:p>
The evaluator will examine the TSS to ensure it describes the means by which
the audit data are transferred to the external audit server, and how the trusted
channel is provided.
	      </h:p>
	      <h:p>
The evaluator will examine the TSS to ensure it describes the amount of audit
data that are stored locally; what happens when the local audit data store is
full; and how these records are protected against unauthorized access.
	      </h:p>
	      <h:p>
The evaluator will examine the TSS to ensure it it contains a list of TOE 
components that store audit data locally. The
evaluator will examine the TSS to ensure that for TOEs that
contain components which do not store audit data locally but transmit their
generated audit data to other components it contains a mapping between the
transmitting and storing TOE components.
	      </h:p>
	      <h:p>
The evaluator will examine the TSS to ensure that it details the behavior of
the TOE when the storage space for audit data is full. When the option
<xref to="s-overwrite"/> is selected this description should include an
outline of the rule for overwriting audit data. 
If <xref to="s-otheractions"/> are chosen such
as sending the new audit data to an external IT entity, then the related
behavior of the TOE shall also be detailed in the TSS.
	      </h:p>
	      <h:p>
The evaluator will examine the TSS to ensure that it details whether the
transmission of audit information to an external IT entity can be done in real-
time or periodically. In case the TOE does not perform transmission in real-
time the evaluator needs to verify that the TSS provides details about what
event stimulates the transmission to be made as well as the possible acceptable
frequency for the transfer of audit data.
	      </h:p>
	      <h:p>
The evaluator will examine the TSS to ensure it
describes to which TOE components this SFR applies and how audit data
transfer to the external audit server is implemented among the different TOE
components (e.g. every TOE components does its own transfer or the data is
sent to another TOE component for central transfer of all audit events to the
external audit server).
	      </h:p>
	      <h:p>
The evaluator will examine the TSS to ensure it
describes which TOE components are storing audit information locally and
which components are buffering audit information and forwarding the
information to another TOE component for local storage. For every
component the TSS shall describe the behavior when local storage space or
buffer space is exhausted.
	      </h:p>
</TSS>
<Guidance>
	      <h:p>
The evaluator will also examine the guidance documentation to ensure it
describes how to establish the trusted channel to the audit server, as well as
describe any requirements on the audit server (particular audit server protocol,
version of the protocol required, etc.), as well as configuration of the TOE
needed to communicate with the audit server.
	      </h:p>
	      <h:p>
The evaluator will also examine the guidance documentation to determine
that it describes the relationship between the local audit data and the audit data
that are sent to the audit log server. For example, when an audit event is
generated, is it simultaneously sent to the external server and the local store,
or is the local store used as a buffer and “cleared” periodically by sending the
data to the audit server.
	      </h:p>
	      <h:p>
The evaluator will also ensure that the guidance documentation describes all
possible configuration options for FAU_STG_EXT.1.3 and the resulting
behavior of the TOE for each possible configuration. The description of
possible configuration options and resulting behavior shall correspond to
those described in the TSS.
	      </h:p>
</Guidance>
<Tests>
<h:p>
Testing of the trusted channel mechanism for audit will be performed as
specified in the associated assurance activities for the particular trusted
channel mechanism. The evaluator shall perform the following additional tests
for this requirement:
<h:ol type="a">
<h:li>Test 1: The evaluator shall establish a session between the TOE and
the audit server according to the configuration guidance provided. The
evaluator shall then examine the traffic that passes between the audit
server and the TOE during several activities of the evaluator’s choice
designed to generate audit data to be transferred to the audit server.
The evaluator shall observe that these data are not able to be viewed in
the clear during this transfer, and that they are successfully received by
the audit server. The evaluator shall record the particular software
(name, version) used on the audit server during testing. The evaluator
shall verify that the TOE is capable of transferring audit data to an
external audit server automatically without administrator intervention.
</h:li>
<h:li>Test 2: The evaluator shall perform operations that generate audit data
and verify that this data is stored locally. The evaluator shall perform
operations that generate audit data until the local storage space is
exceeded and verifies that the TOE complies with the behavior
defined in FAU_STG_EXT.1.3. Depending on the configuration this
means that the evaluator has to check the content of the audit data when
the audit data is just filled to the maximum and then verifies that
<h:ol>
<h:li>The audit data remains unchanged with every new auditable
event that should be tracked but that the audit data is recorded
again after the local storage for audit data is cleared (for the
option ‘drop new audit data’ in FAU_STG_EXT.1.3).
</h:li>
<h:li>The existing audit data is overwritten with every new auditable
event that should be tracked according to the specified rule (for
the option ‘overwrite previous audit records’ in
FAU_STG_EXT.1.3)
</h:li>
<h:li>The TOE behaves as specified (for the option ‘other action’ in
FAU_STG_EXT.1.3).
</h:li>
</h:ol>
</h:li>
<h:li>Test 3: If the TOE complies with FAU_STG_EXT.2/LocSpace (in the base) the
evaluator shall verify that the numbers provided by the TOE according
to the selection for FAU_STG_EXT.2/LocSpace are correct when
performing the tests for FAU_STG_EXT.1.3.</h:li>
<h:li>Test 4: For distributed TOEs, Test 1 defined above should be
applicable to all TOE components that forward audit data to an external
audit server. For the local storage according to FAU_STG_EXT.1.2
and FAU_STG_EXT.1.3 the Test 2 specified above shall be applied to
all TOE components that store audit data locally. For all TOE
components that store audit data locally and comply with
FAU_STG_EXT.2/LocSpace Test 3 specified above shall be applied.
The evaluator shall verify that the transfer of audit data to an external
audit server is implemented.
</h:li>
</h:ol>
</h:p>
</Tests>
	  </aactivity>
	  </f-element>
	</f-component>
	<f-component cc-id="fau_stg_ext.4"
		     name="Protected Local Audit Event Storage for Distributed TOEs">
	  <consistency-rationale>The PP-Module modifies the status of this SFR from the base by making it mandatory.</consistency-rationale>
	  <f-element>
	    <title>The TSF of each TOE component which stores security audit data locally
	    shall perform the following actions when the local storage space for audit data is full:
	    <h:table>
	      <h:tr><h:td>Controller</h:td>
	      <h:td>
		<selectables>
		  <selectable>drop new audit data</selectable>
		  <selectable>overwrite previous audit records according to the following rule: <assignable>rule for overwriting previous audit records</assignable></selectable>
		  <selectable><assignable>other action</assignable></selectable>
		</selectables> 
	      </h:td>
	      </h:tr>
	      <h:tr><h:td>Access Point</h:td>
	      <h:td>
		<selectables>
		  <selectable>drop new audit data</selectable>
		  <selectable>overwrite previous audit records according to the following rule: <assignable>rule for overwriting previous audit records</assignable></selectable>
		  <selectable><assignable>other action</assignable></selectable>
		</selectables> 
	      </h:td>
	      </h:tr>
	    </h:table>
	  </title>
	  <aactivity>
	    <TSS>
<h:p>The evaluator will examine the TSS to confirm that it describes which TOE
components store their security audit events locally and which send their
security audit events to other TOE components for local storage. For the latter,
the target TOE component(s) which store security audit events for other TOE
components will be identified. For every sending TOE component, the
corresponding receiving TOE component(s) need to be identified. For every
transfer of audit information between TOE components it will be described
how the data is secured during transfer according to FTP_ITC.1 or FPT_ITT.1 (Base-PP).
</h:p>
<h:p>For each TOE component which does not store audit events locally by itself,
the evaluator will then confirm that the TSS describes how the audit information is
buffered before sending to another TOE component for local storage.
</h:p>
	    </TSS>
	    <Guidance>
<h:p>The evaluator will examine the guidance documentation to ensure that it
describes how the link between different TOE components is established if
audit data is exchanged between TOE components for local storage. The
guidance documentation will describe all possible configuration options for
local storage of audit data and provide all instructions how to perform the
related configuration of the TOE components.
</h:p>
<h:p>
The evaluator will also ensure that the guidance documentation describes for
every TOE component which does not store audit information locally how
audit information is buffered before transmission to other TOE components.
</h:p>
	    </Guidance>
	    <Tests>
	      For at least one of each type of distributed TOE components (sensors, central
	      nodes, etc.), the following tests will be performed using distributed TOEs.
	      <testlist>
		<test>For each type of TOE component, the evaluator will perform a
		representative subset of auditable actions and ensure that these actions cause
		the generation of appropriately formed audit records. Generation of such
		records can be observed directly on the distributed TOE component (if there
		is appropriate interface), or indirectly after transmission to a central location.
		</test>
		<test>For each type of TOE component that, in the evaluated configuration,
is capable of transmitting audit information to the external audit server (as
specified in FTP_ITC.1), the evaluator will configure a trusted channel and
confirm that audit records generated as a result of actions taken by the
evaluator are securely transmitted. It is sufficient to observe negotiation and
establishment of the secure channel with the TOE component and the
subsequent transmission of encrypted data to confirm this functionality.
Alternatively, the following steps will be performed: The evaluator induces
audit record transmission, then reviews the packet capture around the time of
transmission and verifies that no audit data is transmitted in the clear.
</test>

<test>For each type of TOE component that, in the evaluated configuration,
is capable of transmitting audit information to another TOE component (as
specified in FTP_ITT.1 (Base-PP) or FTP_ITC.1, respectively), the evaluator will
configure a secure channel and confirm that audit records generated as a result
of actions taken by the evaluator are securely transmitted. It is sufficient to
observe negotiation and establishment of the secure channel with the TOE
component and the subsequent transmission of encrypted data to confirm this
functionality. Alternatively, the following steps will be performed: The
evaluator induces audit record transmission, then reviews the packet capture
around the time of transmission and verifies that no audit data is transmitted
in the clear.
</test>
<test>While performing these tests, the evaluator will verify that the TOE behavior
observed during testing is consistent with the descriptions provided in the TSS
and the Guidance Documentation. Depending on the TOE configuration, there
might be a large number of different possible configurations. In such cases, it
is acceptable to perform subset testing, accompanied by an equivalency
argument describing the evaluator’s sampling methodology.
</test>
	    </testlist>
	    </Tests>
	  </aactivity>
	  </f-element>
	</f-component>


	<f-component cc-id="fau_gen_ext.1" name="Security Audit Generation">
	  <consistency-rationale>The PP-Module modifies the status of this SFR from the base by making it mandatory.</consistency-rationale>
	  <f-element>
	    <title>The TSF shall be able to generate audit records for each TOE
component. The audit records generated by the TSF of each TOE component shall include the
subset of security relevant audit events which can occur on the TOE component.
	    </title>
	    <note role="application">
	      The TOE must be able to generate audit records for each TOE component.
	      Some TOE components of a distributed TOE might not implement the complete TSF of the overall TOE but only a subset of the TSF.
	      The audit records for each TOE component need to cover all security relevant 
	      audit events according to the subset of the TSF implemented by this particular
	      TOE component but not necessarily all security relevant audit events according to the TSF of the overall TOE.
	      If a security-relevant event can occur on multiple TOE components,
	      it needs to cause generation of an audit record uniquely identifying the component associated with the event.
	      The ST author will identify for each TOE component which of the overall required audit events defined in FAU_GEN.1.1 are logged.
	      The ST author may decide to do this by providing a corresponding table.
	      The information provided needs to be in agreement with Table 1 in the Base-PP.
	      The overall TOE needs to cover all auditable events listed in 
	      Table 2 in the Base-PP (and Tables 4 and 5 in the Base-PP as
	      applicable to the overall TOE).
	    </note>
	<aactivity>
	  <TSS>
	    <h:p>
	      The evaluator will examine the TSS to confirm that it describes which TOE
	      components store their security audit events locally and which send their
	      security audit events to other TOE components for local storage.
	      For the latter, the target TOE components which store security audit events for 
	      other TOE components will be identified.
	      For each sending TOE component, the corresponding receiving TOE component(s) need 
	      to be identified. 
	      For each transfer of audit information between TOE components, the evaluator
	      will ensure that the TSS contains a description of 
	      how the data is secured during transfer according to FTP_ITC.1 or FPT_ITT.1 (Base-PP).
	    </h:p>
	    <h:p>
	      For each TOE component which does not store audit events locally by itself,
	      the evaluator will confirm that the TSS describes how the audit information is
	      buffered before sending to another TOE component for local storage.
	    </h:p>
	  </TSS>
	  <Guidance>
	    <h:p>The evaluator will examine the guidance documentation to ensure that it
	    describes how the link between different TOE components is established if
	    audit data is exchanged between TOE components for local storage.
	    The evaluator will ensure that the guidance documentation describes 
	    all possible configuration options for local storage of audit data and
	    provide all instructions how to perform the
	    related configuration of the TOE components.
	    </h:p>
	    <h:p>The evaluator will also ensure that the guidance documentation describes for
	    each TOE component that does not store audit information locally how
	    audit information is buffered before transmission to other TOE components.
	    </h:p>
	  </Guidance>
	  <Tests>
	    <h:p>For at least one of each type of distributed TOE components (sensors, central
	    nodes, etc.), the following tests will be performed using distributed TOEs.
	    <h:ol>
	      <h:li>Test 1: For each type of TOE component, the evaluator will perform a
	    representative subset of auditable actions and ensure that these actions cause
the generation of appropriately formed audit records. Generation of such
records can be observed directly on the distributed TOE component (if there
is appropriate interface), or indirectly after transmission to a central location.
</h:li>
<h:li>Test 2: For each type of TOE component that, in the evaluated configuration,
is capable of transmitting audit information to the external audit server (as
specified in FTP_ITC.1), the evaluator will configure a trusted channel and
confirm that audit records generated as a result of actions taken by the
evaluator are securely transmitted. It is sufficient to observe negotiation and
establishment of the secure channel with the TOE component and the
subsequent transmission of encrypted data to confirm this functionality.
Alternatively, the following steps will be performed: The evaluator induces
audit record transmission, then reviews the packet capture around the time of
transmission and verifies that no audit data is transmitted in the clear.
</h:li>
<h:li>Test 3: For each type of TOE component that, in the evaluated configuration,
is capable of transmitting audit information to another TOE component (as
specified in FTP_ITT.1 [Base-PP] or FTP_ITC.1, respectively), the evaluator will
configure a secure channel and confirm that audit records generated as a result
of actions taken by the evaluator are securely transmitted. It is sufficient to
observe negotiation and establishment of the secure channel with the TOE
component and the subsequent transmission of encrypted data to confirm this
functionality. Alternatively, the following steps will be performed: The
evaluator induces audit record transmission, then reviews the packet capture
around the time of transmission and verifies that no audit data is transmitted
in the clear.
</h:li>
	    </h:ol>
</h:p>
<h:p>While performing these tests, the evaluator will verify that the TOE behavior
observed during testing is consistent with the descriptions provided in the TSS
and the Guidance Documentation. Depending on the TOE configuration, there
might be a large number of different possible configurations. In such cases, it
is acceptable to perform subset testing, accompanied by an equivalency
argument describing the evaluator’s sampling methodology.
</h:p>

	  </Tests>
	</aactivity>
	  </f-element>

	</f-component>

      </sec:from_nd_fau>
      <sec:from_nd_fco title="Communication (FCO)">
	<f-component cc-id="fco_cpc_ext.1" name="Component Registration Channel Definition">
	  <consistency-rationale>The PP-Module modifies the status of this SFR from the base by making it mandatory.</consistency-rationale>
	  <f-element>
	    <title>
	      The TSF shall require a Security Administrator to enable
	      communications between any pair of TOE components before such communication can take place.
	    </title>
	  </f-element>
	  <f-element>
	    <title>
	      The TSF shall implement a registration process in which
	      components establish and use a communications channel that uses 
	      <selectables>
		<selectable>
		  a channel that meets the secure channel requirements in 
		  <selectables><selectable>FTP_ITC.1</selectable>
		  <selectable> FPT_ITT.1 (Base-PP)</selectable></selectables>
		</selectable>
		<selectable>
		  a channel that meets the secure registration channel requirements in FTP_TRP.1/Join (in the base)
		</selectable>
		<selectable>no channel</selectable>
	      </selectables>
	      for at least TSF data.
	    </title>
	    <aactivity>
	      <h:p>
		In carrying out these activities the evaluator will determine answers to the following
		questions based on a combination of documentation analysis and testing 
		(possibly also using input from carrying out the Evaluation Activities for the
		relevant registration channel, such as FTP_TRP.1/Join from the Base-PP), and will report the
		answers.<h:br/>
		<h:ol type="a">
		<h:li>What stops a component from successfully communicating with TOE components
		(in a way that enables it to participate as part of the TOE)
		before it has properly authenticated and joined the TOE
		<endnote>
		  The intent of the phrasing “what stops...” as opposed to “what secures...” is for the evaluator to pursue the
		  answer to its lowest level of dependency, i.e. a level at which the security can clearly be seen to depend on things
		  that are under appropriate control. For example, a channel may be protected by a public key that is provided to
		  the relying party in a self-signed certificate. This enables cryptographic mechanisms to be applied to provide
		  authentication (and therefore invites an answer that “the check on the public key certificate secures...”), but
		  does not ultimately stop an attacker from apparently authenticating because the attacker can produce their own
		  self-signed certificate. The question “what stops an unauthorised component from successfully
		  communicating...” focuses attention on what an attacker needs to do, and therefore pushes the answer down to
		  the level of whether a self-signed certificate could be produced by an attacker. Similarly, a well-known key, or
		  a key that is common to a type of device rather than an individual device, may be used in a confidentiality
		  mechanism but does not provide confidentiality because an attacker can find the well-known key or obtain his
		  own instance of a device containing the non-unique key.
		</endnote>?
		</h:li>
		<h:li>What is the enablement step? (Describe what interface it uses, with a
		reference to the relevant section and step in the operational guidance).
		<h:ol>
		  <h:li>What stops anybody other than a Security Administrator from
		  carrying out this step?</h:li>
		  <h:li>How does the Security Administrator know that they are
		enabling the intended component to join? (Identification of the
		joiner might be part of the enablement action itself or might be
		part of secure channel establishment, but it must prevent
		unintended joining of components)
		  </h:li>
		</h:ol>
		</h:li>
		<h:li>
		    What stops a component successfully joining if the Security
		    Administrator has not carried out the enablement step; or, equivalently,
		    how does the TOE ensure that an action by an authentic Security
		    Administrator is required before a component can successfully join?
		  </h:li>
		  <h:li>What stops a component from carrying out the registration process
		  over a different, insecure channel?
		  </h:li>
		  <h:li>
		    If the FTP_TRP.1/Join (Base-PP) channel type is selected in FCO_CPC_EXT.1.2
		    then how do the registration process and its secure channel ensure that
		    the data is protected from disclosure and provides detection of
		    modification?
		  </h:li>
		  <h:li>
		    Where the registration channel does not rely on protection of the
		    registration environment, does the registration channel provide a
		    sufficient level of protection (especially with regard to confidentiality)
		    for the data that passes over it?
		  </h:li>
		  <h:li>
		    Where the registration channel is subsequently used for normal internal
		communication between TOE components (i.e. after the joiner has
		completed registration), do any of the authentication or encryption
		features of the registration channel result in use of a channel that has
		weaker protection than the normal FPT_ITT.1 (Base-PP) requirements for such a
		channel?
		  </h:li>
		  <h:li> What is the disablement step? (Describe what interface it uses, with a
		reference to the relevant section and step in the operational guidance).
		i) What stops a component successfully communicating with other TOE
		components if the Security Administrator has carried out the
		disablement step? </h:li>
		</h:ol>
	      </h:p>
	      <TSS>
		<h:p>The evaluator will ensure that the TSS:
		<h:ol type="a">
		  <h:li>Describes the method by which a Security Administrator enables and
		  disables communications between pairs of TOE components.</h:li>
		  <h:li>
		    Describes the relevant details according to the type of channel in the
		    main selection made in FCO_CPC_EXT.1.2:
		    <h:ol>
		      <h:li>First type: the TSS identifies the relevant SFR iteration that
		      specifies the channel used</h:li>
		      <h:li>Second type: the TSS (with support from the operational
		      guidance if selected in FTP_TRP.1.3/Join) describes details of the
		      channel and the mechanisms that it uses (and describes how the
		      process ensures that the key is unique to the pair of components)
		      – see also the Evaluation Activities for FTP_TRP.1/Join.</h:li>
		    </h:ol>
		</h:li></h:ol>
		</h:p>
		<h:p>The evaluator will confirm that if any aspects of the registration channel are
		identified as not meeting FTP_ITC.1 or FPT_ITT.1 (Base-PP), then the ST has also
		selected the FTP_TRP.1/Join option in the main selection in
		FCO_CPC_EXT.1.2.
		</h:p>
	      </TSS>
	      <Guidance>
		<h:p>The evaluator will examine the guidance documentation to confirm that it
		contains instructions for enabling and disabling communications with any
		individual component of a distributed TOE. The evaluator confirms that
		the method of disabling is such that all other components can be prevented
from communicating with the component that is being removed from the TOE
(preventing the remaining components from either attempting to initiate
communications to the disabled component, or from responding to
communications from the disabled component).
  </h:p>
  <h:p>The evaluator will examine the guidance documentation to confirm that it
includes recovery instructions should a connection be unintentionally broken
during the registration process.
  </h:p>
<h:p>If the TOE uses a registration channel for registering components to the TOE
(i.e. where the ST author uses the FTP_ITC.1, FPT_ITT.1 (Base-PP), or FTP_TRP.1/Join (Base-PP)
channel types in the main selection for FCO_CPC_EXT.1.2) then the
evaluator will examine the Preparative Procedures to confirm that they:

<h:br/>
<h:ol type="a">
  <h:li>describe the security characteristics of the registration channel (e.g. the
protocol, keys and authentication data on which it is based) and will
highlight any aspects which do not meet the requirements for a steady-
state inter-component channel (as in FTP_ITC.1 or FPT_ITT.1 (Base-PP) )</h:li>

  <h:li>identify any dependencies between the configuration of the registration
channel and the security of the subsequent inter-component
communications (e.g. where AES-256 inter-component
communications depend on transmitting 256 bit keys between
components and therefore rely on the registration channel being
configured to use an equivalent key length)</h:li>

  <h:li>identify any aspects of the channel can be modified by the operational
environment in order to improve the channel security and will
describe how this modification can be achieved (e.g. generating a new
key pair, or replacing a default public key certificate).</h:li>
</h:ol>
</h:p>

<h:p>As background for the examination of the registration channel description, it
is noted that the requirements above are intended to ensure that administrators
can make an accurate judgment of any risks that arise from the default
registration process. Examples would be the use of self-signed certificates (i.e.
certificates that are not chained to an external or local Certification Authority),
manufacturer-issued certificates (where control over aspects such as
revocation, or which devices are issued with recognized certificates, is outside
the control of the operational environment), use of generic/non-unique keys
(e.g. where the same key is present on more than one instance of a device), or
well-known keys (i.e. where the confidentiality of the keys is not intended to
be strongly protected – note that this need not mean there is a positive action
or intention to publicize the keys).
</h:p><h:p>In the case of a distributed TOE for which the ST author uses the
FTP_TRP.1/Join channel type in the main selection for FCO_CPC_EXT.1.2
and the TOE relies on the operational environment to provide security for
some aspects of the registration channel security then there are additional
requirements on the Preparative Procedures as described in section 3.4.1.2.
</h:p>
</Guidance>
<Tests>
<h:p>(Note: paragraph 274 lists questions for which the evaluator needs to
determine and report answers through the combination of the TSS, Guidance
Documentation, and Tests Evaluation Activities.)
</h:p><h:p>The evaluator will carry out the following tests:
<h:ol>
  <h:li> Test 1.1: the evaluator will confirm that an IT entity that is not
currently a member of the distributed TOE cannot communicate with
any component of the TOE until the non-member entity is enabled by
a Security Administrator for each of the non-equivalent TOE
components <endnote>An ‘equivalent TOE component’ is a type of distributed TOE component that exhibits the same security
characteristics, behavior and role in the TSF as some other TOE component. In principle a distributed TOE
could operate with only one instance of each equivalent TOE component, although the minimum configuration
of the distributed TOE may include more than one instance (see discussion of the minimum configuration of a
distributed TOE, in section A.9). In practice a deployment of the TOE may include more than one instance of
some equivalent TOE components for practical reasons, such as performance or the need to have separate
instances for separate subnets or VLANs.</endnote>
that it is required to communicate with (non-equivalent 
TOE components are as defined in the minimum configuration for the
distributed TOE)
  </h:li>
  <h:li> Test 1.2:
the evaluator will confirm that after enablement, an IT entity
can communicate only with the components that it has been enabled
for. This includes testing that the enabled communication is successful
for the enabled component pair, and that communication remains
unsuccessful with any other component for which communication has
not been explicitly enabled
Some TOEs may set up the registration channel before the enablement
step is carried out, but in such a case the channel must not allow
communications until after the enablement step has been completed.
  </h:li>
</h:ol>
</h:p>
<h:p>The evaluator will repeat Tests 1.1 and 1.2 for each different type of
enablement process that can be used in the TOE.
<h:ol> 
  <h:li>Test 2: The evaluator will separately disable each TOE component in
turn and ensure that the other TOE components cannot then
communicate with the disabled component, whether by attempting to
initiate communications with the disabled component or by responding
to communication attempts from the disabled component.
  </h:li>
  <h:li> Test 3: The evaluator will carry out the following tests according to
those that apply to the values of the main (outer) selection made in the
ST for FCO_CPC_EXT.1.2.
<h:ol><h:li>If the ST uses the first type of communication channel in the
selection in FCO_CPC_EXT.1.2 then the evaluator tests the
channel via the Evaluation Activities for FTP_ITC.1 or
FPT_ITT.1 (Base-PP) according to the second selection – the evaluator
will ensure that the test coverage for these SFRs includes their
use in the registration process.
</h:li>
<h:li> If the ST uses the second type of communication channel in the
selection in FCO_CPC_EXT.1.2 then the evaluator tests the
channel via the Evaluation Activities for FTP_TRP.1/Join.</h:li>
<h:li>If the ST uses the ‘no channel’ selection, then no test is
required.</h:li>
</h:ol></h:li>
<h:li> Test 4: The evaluator will perform one of the following tests,
according to the TOE characteristics identified in its TSS and
operational guidance:
<h:ol><h:li>If the registration channel is not subsequently used for inter-
component communication, and in all cases where the second
selection in FCO_CPC_EXT.1.2 is made (i.e. using
FTP_TRP.1/Join) then the evaluator will confirm that the
registration channel can no longer be used after the registration
process has completed, by attempting to use the channel to
communicate with each of the endpoints after registration has
completed</h:li>
<h:li>If the registration channel is subsequently used for inter-
component communication then the evaluator will confirm
that any aspects identified in the operational guidance as
necessary to meet the requirements for a steady-state inter-
component channel (as in FTP_ITC.1 or FPT_ITT.1 [Base-PP]) can
indeed be carried out (e.g. there might be a requirement to
replace the default key pair and/or public key certificate).
</h:li>
</h:ol>
</h:li>

<h:li> Test 5: For each aspect of the security of the registration channel that
operational guidance states can be modified by the operational
environment in order to improve the channel security (cf. AGD_PRE.1
refinement item 2 in (cf. the requirements on Preparative Procedures
in 3.5.1.2), the evaluator will confirm, by following the procedure
described in the operational guidance, that this modification can be
successfully carried out.
</h:li>
</h:ol>
</h:p>
</Tests>
	    </aactivity>
	  </f-element>
	</f-component>
      </sec:from_nd_fco>
 
      </modified-sfrs>
      <additional-sfrs/>
      <con-toe> 
        When this PP-Module extends the NDcPP, the TOE type for the overall TOE is still a network device.
	This PP-Module just defines the TOE as a specific type of network device with functional capabilities
        distinct to that type. </con-toe>
      <con-sec-prob/>
      <con-obj/>
      <con-op-en/>

      
      <!-- <con-mod id="fcs_ckm.2/DISTRIB">.</con-mod> -->

    </base-pp>
    <man-sfrs>
      
      <sec:man_fau title="Security Audit (FAU)">
        <f-component cc-id="fau_gen.1" name="Audit Data Generation" iteration="WLAN">
          <consistency-rationale>This SFR iterates the FAU_GEN.1 SFR defined in the Base-PP to define auditable events for the functionality that is specific to this PP-Module.</consistency-rationale>
<f-element>
            <title> The TSF shall be able to generate an audit record of the following auditable
              events: <h:ol type="a">
                <h:li>Start-up and shutdown of the audit functions;</h:li>
                <h:li>All auditable events for the [not specified] level of audit; and</h:li>
                <h:li>[<h:i>Auditable events listed in the Auditable Events table (<xref to="auditWLAN"/>)</h:i></h:li>
                <h:li><h:i>Failure of wireless sensor communication</h:i>]</h:li>
              </h:ol>
            <h:table>
              <h:tr>
                <h:th>Requirement</h:th>
                <h:th>Auditable Events</h:th>
                <h:th>Additional Audit Record Contents</h:th>
              </h:tr>
              <h:tr>
                <h:td>FCS_CKM.1/WPA</h:td>
                <h:td colspan="2">None.</h:td>
              </h:tr>
              <h:tr>
                <h:td>FCS_CKM.2/DISTRIB (optional)</h:td>
                <h:td colspan="2">None.</h:td>
              </h:tr>
              <h:tr>
                <h:td>FCS_CKM.2/GTK</h:td>
                <h:td colspan="2">None.</h:td>
              </h:tr>
              <h:tr>
                <h:td>FCS_CKM.2/PMK</h:td>
                <h:td colspan="2">None.</h:td>
              </h:tr>
              <h:tr>
                <h:td>FCS_RADSEC_EXT.1 (selection-based)</h:td>
                <h:td colspan="2">None.</h:td>
              </h:tr>
              <h:tr>
                <h:td>FCS_RADSEC_EXT.2 (selection-based)</h:td>
                <h:td colspan="2">None.</h:td>
              </h:tr>
              <h:tr>
                <h:td>FCS_RADSEC_EXT.3 (selection-based)</h:td>
                <h:td colspan="2">None.</h:td>
              </h:tr>
              <h:tr>
                <h:td rowspan="2">FCS_IPSEC_EXT.1 (selection-based)</h:td>
                <h:td>Protocol failures.</h:td>
                <h:td>Reason for failure. Non-TOE endpoint of connection.</h:td>
              </h:tr>
              <h:tr>
                <h:td>Establishment or Termination of an IPsec SA.</h:td>
                <h:td>Non-TOE endpoint of connection.</h:td>
              </h:tr>
              <h:tr>
                <h:td rowspan="2">FIA_8021X_EXT.1</h:td>
                <h:td>Attempts to access the 802.1X controlled port prior to successful completion of the authentication exchange.</h:td>
                <h:td>Provided client identity (e.g. Media Access Control [MAC] address).</h:td>
              </h:tr>
	      <h:tr>
		<h:td>Failed authentication attempt.</h:td>
		<h:td>Provided client identity (e.g. MAC address).</h:td>
	      </h:tr>
              <h:tr>
                <h:td>FIA_PSK_EXT.1 (selection-based)</h:td>
                <h:td colspan="2">None.</h:td>
              </h:tr>
              <h:tr>
                <h:td>FIA_UAU.6</h:td>
                <h:td>Attempts to re-authenticate.</h:td>
                <h:td>Origin of the attempt (e.g., IP address).</h:td>
              </h:tr>
              <h:tr>
		<h:td><xref to="fel-managementfun-as"/></h:td>
                <h:td colspan="2">None.</h:td>
	      </h:tr>
              <h:tr>
		<h:td>FMT_SMR_EXT.1</h:td>
                <h:td colspan="2">None.</h:td>
	      </h:tr>
              <h:tr>
                <h:td>FPT_FLS.1</h:td>
                <h:td>Failure of the TSF.</h:td>
                <h:td>Indication that the TSF has failed with the type of failure that occurred.</h:td>
              </h:tr>
              <h:tr>
                <h:td rowspan="2">FPT_TST_EXT.1</h:td>
                <h:td>Execution of TSF self-test.</h:td>
                <h:td>None.</h:td>
              </h:tr>
              <h:tr>
                <h:td>Detected integrity violations.</h:td>
                <h:td>The TSF code file that caused the integrity violation.</h:td>
              </h:tr>
              <h:tr>
                <h:td>FTA_TSE.1</h:td>
                <h:td>Failure of the TSF.</h:td>
                <h:td>Indication that the TSF has failed with the type of failure that occurred.</h:td>
              </h:tr>
              <h:tr>
                <h:td rowspan="2">FTP_ITC.1</h:td>
                <h:td>Failed attempts to establish a trusted channel (including IEEE 802.11).</h:td>
                <h:td rowspan="2">Identification of the initiator and target of channel.</h:td>
              </h:tr>
              <h:tr>
                <h:td>Detection of modification of channel data.</h:td>
              </h:tr>
            </h:table>
              <ctr ctr-type="Table" id="auditWLAN">: Auditable Events</ctr>
            </title>
	    <note role="application">
	      <h:p>
		The auditable events defined in <xref to="auditWLAN"/> are for the SFRs that
		are explicitly defined in this PP-Module and are intended to extend FAU_GEN.1 in the Base-PP.
	      </h:p>
	      <h:p>
		The events in the Auditable Events table should be combined with those of the NDcPP in the
		context of a conforming Security Target.
	      </h:p>
	      <h:p>
		The Auditable Events (<xref to="auditWLAN"/>) includes optional and objective SFRs.
		The auditing of optional and objective SFRs is only required if that SFR is included in the ST.
	      </h:p>
	      <h:p>
		Per FAU_STG_EXT.1 in the Base-PP, the TOE must support transfer of the audit data to an
		external IT entity using a trusted channel.
	      </h:p>
	    </note>
  <aactivity>
    <TSS> There are no TSS evaluation activities for this SFR.<h:br/><h:br/>
    </TSS>
    <Guidance> There are no operational guidance activities for this SFR.<h:br/><h:br/>
    </Guidance>
    <Tests>The evaluator will test the TOE’s ability to correctly generate audit records
      by having the TOE generate audit records in accordance with the evaluation activities
      associated with the functional requirements in this PP-Module. When verifying the
      test results, the evaluator will ensure the audit records generated during testing
      match the format specified in the administrative guide and that the fields in each
      audit record have the proper entries. <h:br/><h:br/>
      Note that the testing here can
      be accomplished in conjunction with the testing of the security mechanisms directly.
      </Tests>
  </aactivity>
</f-element> 
        </f-component>
      </sec:man_fau>
      
      <sec:man_fcs title="Cryptographic Support (FCS)">
        
        <!-- previously FCS_CKM.1(2). Covers key gen for both WPA2 and WPA3 -->
        <f-component name="Cryptographic Key Generation (Symmetric Keys for WPA2 Connections)" cc-id="fcs_ckm.1" iteration="WPA">
            <consistency-rationale>This SFR defines additional cryptographic functionality not defined in the Base-PP, but it implements this using the DRBG mechanism already defined in the Base-PP.</consistency-rationale>
          <f-element>
            <title>
              The TSF shall generate <h:b>symmetric</h:b> cryptographic keys in accordance with a
              specified cryptographic key generation algorithm [<h:i>PRF-384 and <selectables>
                <selectable>PRF-512</selectable>
                <selectable>PRF-704</selectable>
                <selectable exclusive="yes">no other algorithm</selectable>
              </selectables></h:i>] and specified cryptographic key sizes [<h:i>256 bits and <selectables>
                <selectable>128 bits</selectable>
                <selectable>192 bits</selectable>
                <selectable exclusive="yes">no other key sizes</selectable>
              </selectables></h:i>] <h:b>using a Random Bit Generator as specified in FCS_RBG_EXT.1</h:b> that meet the following: 
              [<h:i>IEEE 802.11-2020 and <selectables>
                <selectable>IEEE 802.11ax-2021</selectable>
                <selectable exclusive="yes">no other standards</selectable>
              </selectables></h:i>].
            </title>
            <note role="application">
	      <h:p>
		The cryptographic key derivation algorithm required by IEEE 802.11-2020 (Section
		12.7.1.2) and verified in WPA2 certification is PRF-384, which uses the HMAC-SHA-1 function and
		outputs 384 bits.
		The use of GCMP is defined in IEEE 802.11ax-2021 (Section 12.5.5) and
		requires a
		Key Derivation Function (KDF) based on HMAC-SHA-256 (for 128-bit symmetric keys) or HMAC-SHA-384 (for 256-bit symmetric keys).
		This KDF outputs 704 bits.
	      </h:p>
	      <h:p>
		This requirement applies only to the keys that are generated or derived for the communications
		between the AP and the client once the client has been authenticated.
		It refers to the derivation of the Group Temporal Key (GTK),
		through the Random Bit Generator (RBG) specified in this PP-Module,
		as well as the derivation of the Pairwise Transient Key (PTK) from the Pairwise Master Key (PMK),
		which is done using a random value generated by the RBG specified in this PP-Module,
		the HMAC function as specified in this PP-Module, as well as other information.
		This is specified in IEEE 802.11-2020, primarily in chapter 12.
		<no-link>FCS_RBG_EXT.1</no-link> is defined in the NDcPP.
	      </h:p>
            </note>
            <aactivity>
              <TSS>
		  The cryptographic primitives will be verified through evaluation activities specified elsewhere in this PP-Module.
                The evaluator will verify that the TSS describes how the primitives defined and implemented by this PP-Module
                are used by the TOE in establishing and maintaining secure connectivity to the wireless clients. This
                description will include how the GTK and PTK are generated or derived. The TSS will also provide a
                description of the developer’s methods of assuring that their implementation conforms to the
                cryptographic standards; this includes not only testing done by the developing organization, but also
                proof of third-party testing that is performed (e.g. WPA2 certification). The evaluator will ensure that
                the description of the testing methodology is of sufficient detail to determine the extent to which the
                details of the protocol specifics are tested.<h:br/><h:br/>
              </TSS>
              <Guidance>There are no guidance evaluation activities for this component.<h:br/><h:br/></Guidance>
              <Tests>
		  The evaluator will perform the following test using a packet sniffing tool to collect
		  frames between the TOE and a wireless client:
		<h:p>
                  Step 1: The evaluator will configure the AP to an unused channel and configure the WLAN
                  sniffer to sniff only on that channel (i.e., lock the sniffer on the selected channel).
		  The sniffer should also be configured to filter on the MAC address of the TOE and client.
		</h:p>
		<h:p>
                  Step 2: The evaluator will configure the TOE to communicate with a WLAN client using IEEE 
                  802.11-2020 and a 256-bit (64 hex values 0-f) pre-shared key,
		  setting up the connections as described in the operational guidance.
		  The pre-shared key is only used for testing.
		</h:p>
		<h:p>
                  Step 3: The evaluator will start the sniffing tool, initiate a connection between the
		  TOE and WLAN client, and allow the TOE to authenticate, associate, and successfully
		  complete the four-way handshake with the client.
		</h:p>
		<h:p>
                  Step 4: The evaluator will set a timer for one minute, at the end of which the evaluator
		  will disconnect the client from the TOE and stop the sniffer.
		</h:p>
		<h:p>
                  Step 5: The evaluator will identify the four-way handshake frames (denoted EAPOL-key in Wireshark
                  captures) and derive the PTK from the four-way handshake frames and pre-shared key as specified
		  in IEEE 802.11-2020.
		</h:p>
		<h:p>
                  Step 6: The evaluator will select the first data frame from the captured packets that was
		  sent between the client and TOE after the four-way handshake successfully completed
		  and without the frame control value 0x4208 (the first two bytes are 08 42).
		  The evaluator will use the PTK to decrypt the data portion of the packet as specified in
		  IEEE 802.11-2020 and verify that the decrypted data contains ASCII-readable text.
		</h:p>
		<h:p>
                  Step 7: The evaluator will repeat Step 6 for the next two data frames between the TOE and client,
		  and without frame control value 0x4208.
		</h:p>
		<h:p>
                  Additionally, the evaluator will test the PRF function using the test vectors from:
		  <h:ul>
                  <h:li>Section 2.4 “The PRF Function – PRF (key, prefix, data, length)” of the IEEE 802.11-02/362r6 document "Proposed Test vectors for IEEE 802.11 TGi" dated September 10, 2002</h:li>
                  <h:li>Annex J.3 “PRF reference implementation and test vectors” of IEEE 802.11-2020</h:li>
                  </h:ul>
		</h:p>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        <!-- previously FCS_CKM.2(3) -->
        <f-component name="Cryptographic Key Distribution (GTK)" cc-id="fcs_ckm.2" iteration="GTK">
          <consistency-rationale>This SFR defines additional cryptographic functionality not defined in the Base-PP that is used for functionality outside the original scope of the Base-PP.</consistency-rationale>
          <f-element>
            <title>
              The TSF shall distribute <h:b>Group Temporal Key (GTK)</h:b> in accordance with a specified cryptographic key distribution method: <selectables>
                <selectable>AES Key Wrap in an EAPOL-Key frame</selectable>
                <selectable>AES Key Wrap with Padding in an EAPOL-Key frame</selectable>
              </selectables> that meets the following: [<h:i>NIST SP 800-38F, IEEE 802.11-2020 for the packet format and timing considerations</h:i>] <h:b>
                and does not expose the cryptographic keys</h:b>. 
            </title>
            <note role="application">This requirement applies to the Group Temporal Key (GTK) that is generated by the
              TOE for use in broadcast and multicast messages to clients to which it is connected. 802.11-2020
              specifies the format for the transfer as well as the fact that it must be wrapped by the AES Key Wrap
              method specified in NIST SP 800-38F.</note>
            <aactivity>
              <TSS>The evaluator will check the TSS to ensure that it describes how the GTK is wrapped prior to being
                distributed using the AES implementation specified in this PP-Module, and also how the GTKs are distributed
                when multiple clients connect to the TOE.<h:br/><h:br/></TSS>
              <Guidance>There are no guidance evaluation activities for this component.<h:br/><h:br/></Guidance>
              <Tests>
		  The evaluator will perform the following test using a packet sniffing tool to collect frames
		  between a wireless client and the TOE (which may be performed in conjunction with the
		  evaluation activity for FCS_CKM.1/PMK.
		<h:p>
                  To fully test the broadcast and multicast functionality, these steps will be performed as
		  the evaluator connects multiple clients to the TOE.
		  The evaluator will ensure that GTKs established are sent to the
		  appropriate participating clients.
		</h:p>
		<h:p>
                  Step 1: The evaluator will configure the AP to an unused channel and configure the WLAN
                  sniffer to sniff only on that channel (i.e., lock the sniffer on the selected channel).
		  The sniffer should also be configured to filter on the MAC address of the TOE and client.
		</h:p>
		<h:p>
                  Step 2: The evaluator will configure the TOE to communicate with the client using
		  IEEE 802.11-2020 and a 256-bit (64 hex values 0-f) pre-shared key, setting up the
		  connections as described in the operational guidance.
		  The pre-shared key is only used for testing.
		</h:p>
		<h:p>
                  Step 3: The evaluator will start the sniffing tool, initiate a connection between the
		  TOE and client, and allow the client to authenticate, associate and successfully complete
		  the four-way handshake with the TOE.
		</h:p>
		<h:p>
                  Step 4: The evaluator will set a timer for one minute, at the end of which the evaluator
		  will disconnect the TOE from the client and stop the sniffer.
		</h:p>
		<h:p>
                  Step 5: The evaluator will identify the four-way handshake frames
		  (denoted EAPOL-key in Wireshark captures) and derive the PTK and GTK from the
		  four-way handshake frames and pre-shared key as specified in IEEE 802.11-2020.
		</h:p>
		<h:p>
                  Step 6: The evaluator will select the first data frame from the captured packets that was sent between
                  the TOE and client after the four-way handshake successfully completed,
		  and with the frame control value  0x4208 (the first two bytes are 08 42).
		  The evaluator will use the GTK to decrypt the data portion of the
                  selected packet as specified in IEEE 802.11-2020 and verify that the decrypted
		  data contains ASCII-readable text.
		</h:p>
		<h:p>
                  Step 7: The evaluator will repeat Step 6 for the next two data frames with frame control value 0x4208.
		</h:p>
		<h:p>
                  The evaluator will also perform the following testing based on the supported GTK distribution
		  methods:
		</h:p>
		<h:p><h:b>AES Key Wrap (AES-KW Tests)</h:b></h:p>
		<h:p>
                  <testlist>
                    <test>The evaluator will test the authenticated encryption functionality of AES-KW for each combination of the following input parameter lengths:
		    <h:ul>
		      <h:li>128 and 256 bit key encryption keys (KEKs)</h:li>
		    <h:li>
                      Three plaintext lengths:
		      <h:ol>
			<h:li>One of the plaintext lengths will be two semi-blocks (128 bits).</h:li>
			<h:li>One of the plaintext lengths will be three semi-blocks (192 bits).</h:li>
			<h:li>The third data unit length will be the longest supported plaintext
		      length less than or equal to 64 semi-blocks (4096 bits).</h:li>
		      </h:ol>
		    </h:li>
		    </h:ul>		    
                    For each combination, generate a set of 100 key and plaintext pairs
		    and obtain the ciphertext that results from AES-KW authenticated encryption. 
                    To determine correctness, the evaluator will use the same key and plaintext values
		    and encrypt them using a known good implementation of AES-KW authenticated-encryption,
		    and ensure that the resulting respective ciphertext values are identical.
		    </test>
                    <test>
		      The evaluator will test the authenticated-decryption functionality of AES-KW using
		      the same test as for authenticated-encryption, 
                      replacing plaintext values with ciphertext values and AES-KW authenticated-encryption with
		      AES-KW authenticated-decryption. 
                      Additionally, the evaluator will modify one byte of the ciphertext,
		      attempt to decrypt the modified ciphertext, and ensure that a failure is returned
		      rather than plaintext.
		    </test>
                  </testlist>
		</h:p>
		<h:p> <h:b>AES Key Wrap with Padding (AES-KWP Tests)</h:b></h:p>
		<h:p>
                <testlist>
                  <test>
		  <h:p>The evaluator will test the authenticated-encryption functionality of AES-KWP for each combination of the following input parameter lengths:</h:p>
		  <h:p>128 and 256 bit key encryption keys (KEKs)</h:p>
		    <h:p>
                      Three plaintext lengths. One plaintext length will be one octet. 
                      One plaintext length will be 20 octets (160 bits). 
                      One plaintext length will be the longest supported plaintext length less than or equal to 512 octets (4096 bits).
		    </h:p>
		    <h:p>
                      using a set of 100 key and plaintext pairs and obtain the ciphertext that results from AES-KWP authenticated encryption. 
                      To determine correctness, the evaluator will use the AES-KWP authenticated-encryption function of a known good implementation.
		    </h:p>
		  </test>
                  <test>
		    The evaluator will test the authenticated-decryption functionality of AES-KWP
		    using the same test as for AES-KWP authenticated-encryption, 
                    replacing plaintext values with ciphertext values and AES-KWP authenticated-encryption
		    with AES-KWP authenticated-decryption. 
                    Additionally, the evaluator will modify one byte of the ciphertext, attempt to decrypt the modified ciphertext, and ensure that a failure is returned rather than plaintext.
		  </test>
                </testlist>
		</h:p>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        
        <!-- previously FCS_CKM.2(2) -->
        <f-component name="Cryptographic Key Distribution (PMK)" cc-id="fcs_ckm.2" iteration="PMK">
          <consistency-rationale>This SFR defines additional cryptographic functionality not defined in the Base-PP that is used for functionality outside the original scope of the Base-PP.</consistency-rationale>
          <f-element>
            <title>
              The TSF shall <h:b>receive the 802.11 Pairwise Master Key (PMK)</h:b> in
              accordance with a specified cryptographic key distribution method: [<h:i>from 802.1X Authorization Server</h:i>]
              that meets the following: [<h:i>IEEE 802.11-2020</h:i>] <h:b>and does not expose the cryptographic keys</h:b>.
            </title>
            <note role="application">
              This requirement applies to the Pairwise Master Key that is received from the RADIUS
              server by the TOE. The intent of this requirement is to ensure conformant TOEs implement 802.1X
              authentication prior to establishing secure communications with the client.
              The intent is that any WLAN AS evaluated against this PP-Module will support both
              WPA2-Enterprise and WPA3-Enterprise at a minimum and certificate-based authentication mechanisms
              and therefore disallows implementations that support only pre-shared keys. Because communications
              with the RADIUS server are required to be performed over a protected connection, the transfer
              of the PMK will be protected.
            </note>
            <aactivity>
              <TSS>The evaluator will examine the TSS to determine that it describes how the PMK is transferred (that is,
                through what EAP attribute) to the TOE.<h:br/><h:br/></TSS>
              <Guidance>There are no guidance evaluation activities for this component.<h:br/><h:br/></Guidance>
              <Tests>The evaluator will establish a session between the TOE and a RADIUS server according to the
              configuration guidance provided.
	      The evaluator will then examine the traffic that passes between the
              RADIUS server and the TOE during a successful attempt to connect a wireless client to the TOE to
              determine that the PMK is not exposed.</Tests>
            </aactivity>
          </f-element>
        </f-component>
        
      </sec:man_fcs>
      
      
      <sec:man_fia title="Identification and Authentication (FIA)">
      <!-- FIA_AFL.1 no longer needed, removed -->
        
        
        
        <ext-comp-def title="802.1X Port Access Entity (Authenticator) Authentication" fam-id="FIA_8021X_EXT">
          <fam-behavior>Components in this family describe requirements for implementation of 802.1X port-based network access control.</fam-behavior> 
        </ext-comp-def>   
        
        <f-component name="802.1X Port Access Entity (Authenticator) Authentication" cc-id="fia_8021x_ext.1">
          
          <consistency-rationale>This SFR defines support for 802.1X communications, which is a logical interface that extends the scope of what the Base-PP originally defined.</consistency-rationale>
          
          <comp-lev>requires the TSF to securely implement IEEE 802.1X as an authenticator.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>The following actions should be auditable if FAU_GEN Security Audit Data Generation is included in the ST: <h:ul>
              <h:li>Attempts to access the 802.1X controlled port prior to successful completion of the authentication exchange</h:li>
            </h:ul>
          </audit>
          <dependencies>No dependencies</dependencies>
          
          <f-element><title>The TSF shall conform to IEEE Standard 802.1X for a Port Access Entity (PAE) in the
            “Authenticator” role.</title></f-element>
          <f-element><title>The TSF shall support communications to a RADIUS authentication server
            conforming to RFCs 2865 and 3579.</title></f-element>
          <f-element><title>The TSF shall ensure that no access to its 802.1X controlled port is given to the
            wireless client prior to successful completion of this authentication exchange.</title>
            <note role="application">
	      <h:p>
            This requirement covers the TOE's role as the authenticator in an 802.1X
            authentication exchange. If the exchange is completed successfully, the TOE will obtain the PMK from
            the RADIUS server and perform the four-way handshake with the wireless client (supplicant) to begin
            802.11 communications.</h:p>
	    <h:p>
            As indicated previously, there are at least three communication paths present during the exchange; two
            with the TOE as an endpoint and one with the TOE acting as a transfer point only.
	    The TOE establishes an EAP over Local Area Network (EAPOL) connection with the wireless
	    client as specified in 802.1X-2007.
	    The TOE also establishes (or has established) a RADIUS protocol connection protected either
	    by IPsec or RadSec (TLS) with the RADIUS server. 
            The wireless client and RADIUS server establish an EAP-TLS session
            (RFC 5216); in this transaction the TOE merely takes the EAP-TLS packets from its EAPOL/RADIUS
            endpoint and transfers them to the other endpoint. Because the specific authentication method (TLS in
            this case) is opaque to the TOE, there are no requirements with respect to RFC 5126 in this PP-Module.
            However, the base RADIUS protocol (2865) has an update (3579) that will need to be addressed in the
            implementation and evaluation activities. Additionally, RFC 5080 contains implementation issues that
            will need to be addressed by developers but which levy no new requirements.</h:p>
	    <h:p>
            
            The point of performing 802.1X authentication is to provide access to the network (assuming the
            authentication was successful and that all 802.11 negotiations are performed successfully); in the
            terminology of 802.1X, this means the wireless client has access to the "controlled port" maintained by
            the TOE.
	    </h:p>
          </note>
            <aactivity>
              <TSS>
                In order to show that the TSF implements the 802.1X-2010 standard correctly, the evaluator will ensure
                that the TSS contains the following information: <h:ul>
                <h:li>The sections (clauses) of the standard that the TOE implements</h:li>
                <h:li>For each identified section, any options selected in the implementation allowed by the
                standards are specified</h:li>
                <h:li>For each identified section, any non-conformance is identified and described, including a
                justification for the non-conformance</h:li>
                </h:ul>
                Because the connection to the RADIUS server will be contained in an IPsec or RadSec (TLS) tunnel,
                the security mechanisms detailed in the RFCs identified in the requirement are not relied on to provide
                protection for these communications. Consequently, no extensive analysis of the RFCs is required.
                However, the evaluator will ensure that the TSS describes the measures (documentation, testing) that
                are taken by the product developer to ensure that the TOE conforms to the RFCs listed in this
                requirement.<h:br/><h:br/>
              </TSS>
              <Guidance>There are no guidance evaluation activities for this component.<h:br/><h:br/></Guidance>
              <Tests>
                The evaluator will perform the following tests:
                <testlist>
                  <test>The evaluator will demonstrate that a wireless client has no access to the test network. After
                    successfully authenticating with a RADIUS server through the TOE, the evaluator will demonstrate that
                    the wireless client does have access to the test network.</test>
                  <test>The evaluator will demonstrate that a wireless client has no access to the test network. The
                    evaluator will attempt to authenticate using an invalid client certificate, such that the EAP-TLS
                    negotiation fails. This should result in the wireless client still being unable to access the test network.
                  </test>
                  <test>The evaluator will demonstrate that a wireless client has no access to the test network. The
                    evaluator will attempt to authenticate using an invalid RADIUS certificate, such that the EAP-TLS
                    negotiation fails. This should result in the wireless client still being unable to access the test network.</test>
                </testlist>
                <h:b>Note: </h:b>Tests 2 and 3 above are not tests that "EAP-TLS works," although that is a by-product of the test.
                The test is actually that a failed authentication (under two failure modes) results in denial of access to
                the network, which demonstrates the enforcement of FIA_8021X_EXT.1.3.
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      
    
      <f-component name="Re-Authenticating" cc-id="fia_uau.6">
        <consistency-rationale>This SFR defines support for re-authentication of wireless users, which are a type of subject beyond the scope of what the Base-PP originally defined.</consistency-rationale>
        <f-element>
          <title>The TSF shall re-authenticate the <h:b>administrative</h:b> user under the conditions [<h:i>when the user
            changes their password, <selectables>
              <selectable>following TSF-initiated session locking</selectable>
              <selectable><assignable>other conditions</assignable></selectable>
              <selectable exclusive="yes">no other conditions</selectable>
            </selectables></h:i>]. 
          </title>
          <aactivity>
            <TSS>There are no TSS evaluation activities for this component.<h:br/><h:br/></TSS>
            <Guidance>There are no guidance evaluation activities for this component.<h:br/><h:br/></Guidance>
            <Tests>
	      The evaluator will attempt to change their password as directed by the operational guidance.
              While making this attempt, the evaluator will verify that re-authentication is required.
	      <h:p>
		If other re-authentication conditions are specified, the evaluator will cause those conditions to
		occur and verify that the TSF re-authenticates the authenticated user.
	      </h:p>
            </Tests>
          </aactivity>
        </f-element>
      </f-component>
      </sec:man_fia>
      
      <sec:man_fmt title="Security Management (FMT)">
        <f-component name="Specification of Management Functions (WLAN Access Systems)" id="fel-managementfun-as" cc-id="fmt_smf.1" iteration="AccessSystem">
			<consistency-rationale>This SFR defines additional management functionality that is specific to the Module’s product type and would therefore not be expected to be present in the Base-PP.</consistency-rationale>
			<f-element>
			<title>The TSF shall be capable of performing the following management functions: 
			  <h:ul>
			    <h:li>Configure the security policy for each wireless network, including:</h:li>
			    <h:ul> 
			      <h:li>Security type</h:li>
			      <h:li>Authentication protocol</h:li>
			      <h:li>Client credentials to be used for authentication</h:li>
			      <h:li>SSID</h:li>
			      <h:li>If the SSID is broadcasted</h:li>
			      <h:li>Frequency band set to <selectables><selectable>2.4 GHz</selectable><selectable>5 GHz</selectable><selectable>6 GHz</selectable></selectables></h:li>
			      <h:li>Transmit power level</h:li>
			    </h:ul></h:ul></title>
			<aactivity>
			  <TSS>
			    The evaluator will confirm that the TSS includes which security types (e.g., WPA3),
			    authentication protocol (e.g., SAE), and frequency bands the WLAN AS supports.
			    The evaluator will confirm that the TSS includes how connection attempts
			    from clients that are not operating on an approved security type are handled.<h:br/><h:br/>
			  </TSS>
			  <Guidance> 
			    The evaluator will confirm that the operational guidance includes instructions for configuring the WLAN AS 
				  for each feature listed.<h:br/><h:br/>
			  </Guidance>
			  <Tests>
			  <testlist>
			    <test>For each security type specified in the TSS, configure the network to the approved security type and verify that the client can establish a connection.  Maintaining the same SSID, change the security type of the client to a non-approved security type and attempt to establish a connection.  Verify that the connection was unsuccessful. </test>
			    <test>For each authentication protocol specified in the TSS, configure the network accordingly per the AGD. Verify that the client connection attempt is successful when using the correct client credentials and that the connection is unsuccessful when incorrect authentication credentials are used. </test>		  
			    <test>
			      Configure the SSID to be broadcasted.
			      Using a network sniffing tool, capture a beacon frame and confirm that the SSID is included.
			      Configure the SSID to be hidden.
			      Using a network sniffing tool, capture a beacon frame and confirm that the SSID is not listed.
			    </test>		  
			    <test>The evaluator will configure the AS to operate in each of the selected frequency bands and verify using a network sniffing tool. </test>	
			    <test>The evaluator will demonstrate that the client can establish a connection to the AS on the default power level.  After disconnecting,  the power level should be adjusted and then the client should be able to successfully connect to the AS again.</test>
			  </testlist>
			  </Tests>
			</aactivity>
		</f-element>
		</f-component>
        <ext-comp-def title="Security Management Restrictions" fam-id="FMT_SMR_EXT">
          <fam-behavior>Components in this family describe architectural restrictions on security administration that are not defined in CC Part 2.</fam-behavior> 
        </ext-comp-def>
        <f-component name="No Administration from Client" cc-id="fmt_smr_ext.1">
          <consistency-rationale>This SFR applies restrictions on when the execution of management functions is authorized. It does not prevent proper administration of the TSF.</consistency-rationale>
          
          <comp-lev>requires the TSF to reject remote administration from a wireless client by default.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>FMT_SMF.1 Specification of Management Functions</dependencies>
          
          <f-element>
            <title>
              The TSF shall ensure that the ability to administer remotely the TOE from a wireless client
              shall be disabled by default.
            </title>
            <aactivity>
              <TSS>There are no TSS evaluation activities for this component.<h:br/><h:br/></TSS>
              
              <Guidance>The evaluator will review the operational guidance to ensure that it contains instructions for
                administering the TOE both locally and remotely, including any configuration that needs to be
                performed on the client for remote administration. The evaluator will confirm that the TOE
                does not permit remote administration from a wireless client by default.<h:br/><h:br/></Guidance>
              
              <Tests>The evaluator will demonstrate that after configuring the TOE for first use from the operational
                guidance, it is possible to establish an administrative session with the TOE on the “wired” portion of the
                device. They will then demonstrate that an identically configured wireless client that can successfully
                connect to the TOE cannot be used to perform administration.</Tests>
            </aactivity>
          </f-element>
        </f-component>
      </sec:man_fmt>
      
      
      <sec:man_fpt title="Protection of the TSF (FPT)">
        
        <f-component name="Failure with Preservation of Secure State" cc-id="fpt_fls.1">
          <consistency-rationale>This SFR extends the functionality described by FPT_TST_EXT.1 in the Base-PP by defining the specific TSF reaction in the event of a failed self-test.</consistency-rationale>
          <f-element>
            <title>The TSF shall preserve a secure state when the following types of failures occur: [<h:i>failure of
              the self-tests</h:i>].</title>
            <note role="application">
              The intent of this requirement is to express the fail secure capabilities that the TOE
              possesses.
	      This means that the TOE must be able to attain a secure, safe state (shutdown) when any of
              the identified failures occur.
            </note>
            <aactivity>
              <TSS>The evaluator will examine the TSS to determine that the TOE’s implementation of the fail secure
                functionality is documented. The evaluator will examine the TSS to ensure that it describes all failure
                conditions and how a secure state is preserved if any of these failures occur. The evaluator will ensure that 
                the definition of a secure state is suitable to ensure the continued protection of any key material and user data.<h:br/><h:br/>
              </TSS>
              <Guidance>The evaluator will examine the operational guidance to verify that it describes applicable recovery instructions 
		      for each TSF failure state.<h:br/><h:br/></Guidance>
              <Tests>For each failure mode specified in the ST, the evaluator will ensure that the TOE attains a secure state
                (e.g., shutdown) after initiating each failure mode type.
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </sec:man_fpt>
      
      <sec:man_fta title="TOE Access (FTA)">
       
        <f-component name="TOE Session Establishment" cc-id="fta_tse.1">
          <consistency-rationale>This SFR applies restrictions on establishment of wireless communications, which is a logical interface that extends the scope of what the Base-PP originally defined.</consistency-rationale>
          <f-element>
            <title>The TSF shall be able to deny session establishment <h:b>of a wireless client session</h:b> based
              on [<h:i>TOE interface, time, day, <selectables>
                <selectable><assignable>other attributes</assignable></selectable>
                <selectable exclusive="yes">no other attributes</selectable>
              </selectables></h:i>].
            </title>
            <note role="application">
	      <h:p>
              The “TOE interface” can be specified in terms of the device in the TOE that the WLAN
              client is connecting to (e.g. specific WLAN APs). “Time” and “day” refer to time-of-day and
              day-of-week, respectively.
	      </h:p>
	      <h:p>
              The assignment is to be used by the ST author to specify additional attributes on which denial of session
              establishment can be based.
	      </h:p>
            </note>
            <aactivity>
              <TSS>
		The evaluator will examine the TSS to determine that all of the attributes on
		which a client session can be denied are specifically defined.<h:br/><h:br/></TSS>
              <Guidance>The evaluator will examine the operational guidance to determine that it contains guidance for
                configuring each of the attributes identified in the TSS.<h:br/><h:br/></Guidance>
              <Tests>
                For each supported attribute, the evaluator will perform the following test:
                <testlist>
                  <test>
		    The evaluator successfully establishes a client session with a wireless client.
		    The evaluator then follows the operational guidance to configure the system so
		    that the client’s access is denied based on a specific value of the attribute.
		    The evaluator will then attempt to establish a session in contravention
                    to the attribute setting (for instance, the client is denied WLAN access based upon the TOE interface
                    (e.g. WLAN AP) it is connecting to, or that the client is denied access based upon the time-of-day or
                    day-of-week it is attempting connection on).
		    The evaluator will observe that the access attempt fails.
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </sec:man_fta>
	  <sec:man_ftp title="Trusted Path/Channels (FTP)">
		  <f-component cc-id="ftp_itc.1" name="Inter-TSF Trusted Channel (WLAN Client Communications)" iteration="Client">
		  <consistency-rationale>
			  This SFR iterates the FTP_ITC.1 SFR defined in the Base-PP to define trusted communication channels for the functionality that is specific to this PP-Module.
			  </consistency-rationale>
			  <f-element>
			  <title>The TSF shall be capable of using WPA3-Enterprise, WPA2-Enterprise and 
				  <selectables>
					  <selectable>WPA3-SAE</selectable>
					  <selectable>WPA3-SAE-PK</selectable>
					  <selectable>WPA2-PSK</selectable>
					  <selectable exclusive="yes">no other mode</selectable>
				  </selectables>
				  as defined by IEEE 802.11-2020 to provide a trusted communication channel
				  between itself and WLAN clients that is logically distinct from 
				  other communication channels and provides assured identification of its end
				  points and protection of the channel data from disclosure and detection of
				  modification of the channel data.
				  </title>
				</f-element>
			    <f-element>
		<title>
			The TSF shall permit the authorized IT entities to initiate communication via the trusted channel.
		</title>
	</f-element>
			  <f-element>
			  <title>The TSF shall initiate communication via the trusted channel for [<h:i>no services</h:i>].</title>
				  <aactivity>
				    This component is adequately evaluated when performing the evaluation activities for <no-link>FTP_ITC.1</no-link> in the <xref to="ND"/> base-PP.
				    <no-tests/>
				  </aactivity>	  
			  </f-element>
		  </f-component>
      </sec:man_ftp>
        
    </man-sfrs>
    <opt-sfrs>
      <sec:opt_fcs title="Cryptographic Support (FCS)">
        
       
        <f-component name="Cryptographic Key Distribution (802.11 Keys)" cc-id="fcs_ckm.2" iteration="DISTRIB">
          <consistency-rationale>This SFR defines an additional use for the cryptographic and self-protection mechanisms defined in the Base-PP.</consistency-rationale>
          <f-element>
            <title>The TSF shall distribute <h:b>the IEEE 802.11</h:b> keys in accordance with a
              specified key distribution method: [<h:i>trusted channel protocol specified in FPT_ITT.1(Base-PP) </h:i>] that meets the following: [<h:i>standards specified in the various iterations of FCS_COP.1</h:i>] <h:b>and
                does not expose the cryptographic keys</h:b>.
            </title>
            <note role="application">
	      <h:p>
              This requirement applies to any key necessary for successful IEEE 802.11 connections
              not covered by FCS_CKM.2/GTK.
	      In cases where a key must be distributed to other APs, this
              communication must be performed via a mechanism of commensurate cryptographic strength.
	      Because communications with any component of a distributed TOE are required to be
	      performed over a trusted connection, the transfer of these keys will be protected.
	      </h:p>
	      <h:p>
		FCS_COP.1 and FPT_ITT.1 are defined in the NDcPP.
	      </h:p>
	      </note>
            <aactivity>
              <TSS>The evaluator will examine the TSS to determine that it describes which keys are distributed outside
                the TOE, where they are sent, and the purpose for this transfer.<h:br/><h:br/></TSS>
              <Guidance>If this function is dependent on TOE configuration, the evaluator will confirm that the operational
              guidance contains instructions for how to configure that the keys are adequately protected.<h:br/><h:br/>
	      </Guidance>
              <Tests>This requirement will be tested in conjunction with the tests for the cryptographic primitives, the secure
                protocols, and FPT_ITT.1 (Base-PP).</Tests>
            </aactivity>
          </f-element>
        </f-component>
      </sec:opt_fcs>   

    <!-- FPT_ITT.1 removed because it exists in the NDcPP now  -->

    </opt-sfrs>
    <sel-sfrs>
      
      <sec:sel_fcs title="Cryptographic Support (FCS)">
        
        <ext-comp-def title="RadSec" fam-id="FCS_RADSEC_EXT">
          <fam-behavior>Components in this family describe requirements for implementation of the RadSec (RADIUS over TLS) protocol.</fam-behavior> 
        </ext-comp-def>
        <!-- added by TD0271 -->
        <f-component name="RadSec" cc-id="fcs_radsec_ext.1">
		  <depends on="s-radius"/>
          <consistency-rationale>This SFR defines the implementation of RadSec and the peer authentication method that it uses. 
            This relies on the TLS requirements defined by the Base-PP and may also use the X.509v3 certificate validation methods
            specified in the Base-PP, depending on the selected peer authentication method.</consistency-rationale>
          
          <comp-lev>requires the TSF to implement RadSec using a specified peer authentication method.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>
	    FCS_TLSC_EXT.1 TLS Client Protocol<h:br/>
            <no-link>FIA_PSK_EXT.1</no-link> Pre-Shared Key Composition<h:br/>
            FIA_X509_EXT.1 X.509v3 Certificate Validation
	  </dependencies>
          <f-element>
            <title>
              The TSF shall implement RADIUS over TLS as specified in RFC 6614 to communicate securely with a RADIUS server.
            </title>
          </f-element>
          <f-element>
            <title>
            The TSF shall perform peer authentication using <selectables>
              <selectable id="s-x509-certs">X.509v3 certificates</selectable>
              <selectable id="s-radsec-psk">pre-shared keys</selectable>
            </selectables>.
            </title>
			  <ext-comp-def-title><title>
              The TSF shall perform peer authentication using <assignable>some authentication method</assignable>.
              </title></ext-comp-def-title>
            <note role="application">
	      <h:p>This SFR is applicable if "RADIUS over TLS" is selected in FTP_ITC.1.1.</h:p>
	      <h:p>
		If <xref to="s-x509-certs"/> is selected in FCS_RADSEC_EXT.1.2,
		then FCS_TLSC_EXT.2 from the NDcPP must be claimed. 
		If <xref to="s-radsec-psk"/> is selected in FCS_RADSEC_EXT.1.2, then FCS_RADSEC_EXT.2 and FIA_PSK_EXT.1 in this PP-Module must be claimed.
	      </h:p>
            </note>
            <aactivity>
              <TSS>
		  The evaluator will verify that the TSS description includes the use of
		  RADIUS over TLS, as described in RFC 6614.
		<h:p>
                  If X.509v3 certificates is selected, the evaluator will ensure that the TSS description includes the use of client-side certificates for TLS mutual authentication.
		</h:p>
	      </TSS>
              <Guidance>
		The evaluator will verify that any configuration necessary to meet the requirement must be contained in the guidance.<h:br/><h:br/>
	      </Guidance>
              <Tests>
		The evaluator will demonstrate the ability to successfully establish a RADIUS over TLS connection with a RADIUS server. 
                This test will be performed with X.509v3 certificates if selected and performed with pre-shared keys if selected.</Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        <!-- added by TD0271 -->
        <f-component name="RadSec using Pre-Shared Keys" cc-id="fcs_radsec_ext.2">
		  <depends on="s-radsec-psk"/>
          <consistency-rationale>This SFR defines the implementation of RadSec when pre-shared key authentication is used. This functionality is outside the original scope of the Base-PP, but it relies on 
            the TLS client protocol implementation, cryptographic algorithms, and random bit generation functions defined by the Base-PP.</consistency-rationale>
          
          <comp-lev>requires the TSF to implement RadSec using pre-shared key authentication in a manner that conforms to relevant TLS specifications.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>
	    FCS_CKM.1 Cryptographic Key Generation<h:br/>
            FCS_COP.1 Cryptographic Operation<h:br/>
            <no-link>FCS_RADSEC_EXT.1</no-link> RadSec<h:br/>
            FCS_RBG_EXT.1 Random Bit Generation
	  </dependencies>
          <f-element>
            <title>The TSF shall implement <selectables>
              <selectable>TLS 1.2 (RFC 5246)</selectable>
              <selectable>TLS 1.1 (RFC 4346)</selectable>
            </selectables> and no earlier TLS versions when acting as a RADIUS over TLS client that supports the following ciphersuites: 
              <selectables linebreak="yes">
                <selectable>TLS_PSK_WITH_AES_128_CBC_SHA</selectable>
                <selectable>TLS_PSK_WITH_AES_256_CBC_SHA</selectable>
                <selectable>TLS_DHE_PSK_WITH_AES_128_CBC_SHA</selectable>
                <selectable>TLS_DHE_PSK_WITH_AES_256_CBC_SHA</selectable>
                <selectable id="s-rsa_psk_aes_128_cbc">TLS_RSA_PSK_WITH_AES_128_CBC_SHA</selectable>
                <selectable id="s-rsa_psk_aes_256_cbc">TLS_RSA_PSK_WITH_AES_256_CBC_SHA</selectable>
                <selectable>TLS_PSK_WITH_AES_128_GCM_SHA256</selectable>
                <selectable>TLS_PSK_WITH_AES_256_GCM_SHA384</selectable>
                <selectable>TLS_DHE_PSK_WITH_AES_128_GCM_SHA256</selectable>
                <selectable>TLS_DHE_PSK_WITH_AES_256_GCM_SHA384</selectable>
                <selectable id="s-rsa_psk_aes_128_gcm">TLS_RSA_PSK_WITH_AES_128_GCM_SHA256</selectable>
                <selectable id="s-rsa_psk_aes_256_gcm">TLS_RSA_PSK_WITH_AES_256_GCM_SHA384</selectable>
              </selectables>.
            </title>
            <ext-comp-def-title>
              <title>The TSF shall implement <assignable>list of allowed TLS versions</assignable> and reject all other TLS and SSL versions. 
                The TLS implementation shall support the following ciphersuites for use when acting as a RADIUS over TLS client: <assignable>list of supported ciphersuites</assignable>.</title>
            </ext-comp-def-title>
            <note role="application">
	      <h:p>
		If any of the TLS_RSA_PSK ciphersuites are selected by the ST author,
	        it is necessary to claim the selection-based requirement FCS_RADSEC_EXT.3.
	      </h:p>
	      <h:p>
		The above ciphersuites are only for use when the TSF is acting as a RADIUS over TLS client,
		not for other uses of the TLS protocol. 
		The ciphersuites to be tested in the evaluated configuration are limited by this requirement. 
		The ST author should select the ciphersuites that are supported.
		If "X.509v3 certificates" is selected in FCS_RADSEC_EXT.1.2, 
		the ciphersuites selected in (and tested by) FCS_TLSC_EXT.2.1 are also supported for
		RADIUS over TLS client use.
	      </h:p>
            </note>
          </f-element>
          <f-element>
            <title>The TSF shall be able to <selectables>
              <selectable>accept</selectable>
              <selectable>generate using the random bit generator specified in FCS_RBG_EXT.1</selectable>
            </selectables> bit-based pre-shared keys.</title>
            <aactivity>
              <TSS>
		The evaluator will check the description of the implementation of this protocol in the TSS to ensure that the ciphersuites supported are specified. 
                The evaluator will check the TSS to ensure that the ciphersuites specified are identical to those listed for this component. 
                The evaluator will also verify that the TSS contains a description of the denial of old SSL and TLS versions.
		<h:p>
                  The evaluator will examine the TSS to ensure it describes the process by which the bit-based pre-shared keys are generated (if the TOE supports this functionality) 
                  and confirm that this process uses the RBG specified in FCS_RBG_EXT.1.
		</h:p>
	      </TSS>
              <Guidance>
		The evaluator will verify that any configuration necessary to meet the requirement must be contained in the guidance.
		<h:p>
                  The evaluator will also check the guidance documentation to ensure that it contains instructions on configuring the TOE so that RADIUS over TLS conforms to the description in the TSS 
                  (for instance, the set of ciphersuites advertised by the TOE may have to be restricted to
		  meet the requirements).
		</h:p>
		<h:p>
                  The evaluator will confirm the operational guidance contains instructions for either entering bit-based pre-shared keys or generating a bit-based pre-shared key (or both).
		</h:p>
	      </Guidance>
              <Tests>The evaluator will perform the following tests:
              <testlist>
                <test>The evaluator will establish a RADIUS over TLS connection using each of the ciphersuites selected in FCS_RADSEC_EXT.2.1. 
                  It is sufficient to observe the successful negotiation of a cipher suite to satisfy the intent of the test; it is not necessary 
                  to examine the characteristics of the encrypted traffic in an attempt to discern the cipher suite being used (for example, 
                  that the cryptographic algorithm is 128-bit AES and not 256-bit AES).</test>
                <test>The evaluator will set the pre-shared key to a value that does not match the server's pre-shared key and demonstrate that the TOE cannot successfully complete a protocol negotiation using this key.</test>
                <test>The evaluator will configure the server to select the TLS_NULL_WITH_NULL_NULL cipher suite and verify that the client denies the connection.</test>
                <test>The evaluator will perform the following modifications to the traffic:<h:ul>
                  <h:li>Change the TLS version selected by the server in the Server Hello to a non-supported TLS version (for example, 1.3, represented by the two bytes 03 04) and verify that the client rejects the connection.</h:li>
                  <h:li>Modify at least one byte in the server’s nonce in the Server Hello handshake message, and verify that the client rejects the Server Key Exchange handshake message 
                    (if using a DHE cipher suite) or that the server denies the client’s Finished handshake message.</h:li>
                  <h:li>Modify the server’s selected cipher suite in the Server Hello handshake message to be a cipher suite not presented in the Client Hello handshake message. 
                    The evaluator will verify that the client rejects the connection after receiving the Server Hello.</h:li>
                  <h:li>Modify a byte in the Server Finished handshake message, and verify that the client rejects the connection and does not send any application data.</h:li>
                  <h:li>Send a garbled message from the server after the server has issued the ChangeCipherSpec message and verify that the client denies the connection.</h:li>
                </h:ul></test>
                <test>[conditional] If the TOE does not generate bit-based pre-shared keys, the evaluator will obtain a bit-based pre-shared key of the appropriate length and enter it according to the instructions in the operational guidance. 
                  The evaluator will then demonstrate that a successful protocol negotiation can be performed with the key.</test>
                <test>[conditional] If the TOE does generate bit-based pre-shared keys, the evaluator will generate a bit-based pre-shared key of the appropriate length and use it according to the instructions in the operational guidance. 
                  The evaluator will then demonstrate that a successful protocol negotiation can be performed with the key.</test>
              </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        
        <f-component name="RadSec using Pre-Shared Keys and RSA" cc-id="fcs_radsec_ext.3">
		  <depends on="s-rsa_psk_aes_128_cbc" on1="s-rsa_psk_aes_256_cbc" on2="s-rsa_psk_aes_128_gcm" on3="s-rsa_psk_aes_256_gcm"/>
          <consistency-rationale>This SFR defines the implementation of RadSec when pre-shared key authentication with RSA is used. This functionality is outside the original scope of the Base-PP, but it relies on 
            the TLS client protocol implementation, cryptographic algorithms, and random bit generation functions defined by the Base-PP.</consistency-rationale>
          
          <comp-lev>requires the TSF to validate the external entity used for trusted communications.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>
	    FCS_RADSEC_EXT.2 RadSec using Pre-Shared Keys<h:br/>
            <no-link>FIA_X509_EXT.1</no-link> X.509v3 Certificate Validation<h:br/>
          </dependencies>
          <f-element>
            <title>
              When the TSF negotiates a TLS_RSA_PSK cipher suite, the TSF shall verify that the presented identifier matches the reference identifier per RFC 6125 section 6.
            </title>
            <note role="application">
	      <h:p>
	      This requirement must be claimed if any ciphersuites beginning with 'TLS_RSA_PSK' are selected in FCS_RADSEC_EXT.2.1.</h:p>
	      <h:p>
              The rules for verification of identity are described in Section 6 of RFC 6125. 
              The reference identifier is typically established by configuration (e.g. configuring the name of the authentication server). 
              Based on a singular reference identifier’s source domain and application service type (e.g. HTTP, SIP, LDAP), 
              the client establishes all reference identifiers which are acceptable, such as a Common Name for the Subject Name field of the certificate and a (case-insensitive) DNS name for the Subject Alternative Name field. 
              The client then compares this list of all acceptable reference identifiers to the presented identifiers in the TLS server’s certificate.
	      </h:p>
	      <h:p>
              The preferred method for verification is the Subject Alternative Name using DNS names, URI names, or Service Names. 
              Verification using the Common Name is required for the purposes of backwards compatibility. 
              Additionally, support for use of IP addresses in the Subject Name or Subject Alternative name is discouraged as against best practices but may be implemented. 
              Finally, support for wildcards is discouraged but may be implemented. 
              If the client supports wildcards, the client must follow the best practices regarding matching; these best practices are captured in the evaluation activity.
	      </h:p>
            </note>
          </f-element>
          <f-element>
            <title>When the TSF negotiates a TLS_RSA_PSK cipher suite, the TSF shall  <selectables>
                <selectable>not establish the connection</selectable>
                <selectable>request authorization to establish the connection</selectable>
                <selectable><assignable>other action</assignable></selectable>
              </selectables> if the presented server certificate is deemed invalid.</title>
              <note role="application">
		<h:p>This requirement must be claimed if any ciphersuites beginning with 'TLS_RSA_PSK' are selected in FCS_RADSEC_EXT.2.1.</h:p>
		<h:p>
              Validity is determined by the identifier verification, certificate path, the expiration date, and the revocation status in accordance with RFC 5280. 
              Certificate validity is tested in accordance with testing performed for FIA_X509_EXT.1/Rev in the NDcPP.
		</h:p>
	      </note>
            <aactivity>
              <TSS>
                The evaluator will ensure that the TSS describes the client’s method of establishing all reference identifiers from the administrator and application-configured reference identifier, 
                including which types of reference identifiers are supported (e.g., Common Name, DNS Name, URI Name, Service Name, or other application-specific Subject Alternative Names) and whether IP addresses and wildcards are supported. 
                The evaluator will ensure that this description identifies whether and the manner in which certificate pinning is supported or used by the TOE.<h:br/><h:br/></TSS>
              <Guidance>
                The evaluator will verify that the operational guidance includes instructions for setting the reference identifier to be used for the purposes of certificate validation in TLS.<h:br/><h:br/>
	      </Guidance>
              <Tests>The evaluator will perform the following tests:
                <testlist>
                    <test>The evaluator will attempt to establish the connection using a server with a server certificate that contains the Server Authentication purpose in the extendedKeyUsage field and 
                      verify that a connection is established. The evaluator will then verify that the client rejects an otherwise valid server certificate that lacks the Server Authentication purpose in the extendedKeyUsage 
                      field and a connection is not established. Ideally, the two certificates should be identical except for the extendedKeyUsage field.</test>
                    <test>The evaluator will present a server certificate that does not contain an identifier in either the Subject Alternative Name (SAN) or Common Name (CN) that matches the reference identifier. 
                      The evaluator will verify that the connection fails.</test>
                    <test>The evaluator will present a server certificate that contains a CN that matches the reference identifier, 
                      contains the SAN extension, but does not contain an identifier in the SAN that matches the reference identifier. 
                      The evaluator will verify that the connection fails. The evaluator will repeat this test for each supported SAN type.</test>
                    <test>The evaluator will present a server certificate that contains a CN that does not match the reference identifier but does contain an identifier in the SAN that matches. 
                      The evaluator will verify that the connection succeeds.</test>
                      <test>
			[conditional] If the TOE does not mandate the presence of the SAN extension, the evaluator will present a server certificate that contains a CN that matches the reference identifier and does not contain the SAN extension. 
			The evaluator will verify that the connection succeeds.
			If the TOE does mandate the presence of the SAN extension, this test will be omitted.
		  </test>
                  <test>[conditional] If wildcards are supported by the TOE, the evaluator will perform the following tests: <h:ul>
                      <h:li>The evaluator will present a server certificate containing a wildcard that is not in the left-most label of the presented identifier (e.g. foo.*.example.com) and verify that the connection fails.</h:li>
                      <h:li>The evaluator will present a server certificate containing a wildcard in the left-most label but not preceding the public suffix (e.g. *.example.com). 
                        The evaluator will configure the reference identifier with a single left-most label (e.g. foo.example.com). 
                        The evaluator will verify that the connection succeeds. The evaluator will configure the reference identifier without a left-most label as in the certificate (e.g. example.com) and verify that the connection fails. 
                        The evaluator will configure the reference identifier with two left-most labels (e.g. bar.foo.example.com) and verify that the connection fails.</h:li>
                      <h:li>The evaluator will present a server certificate containing a wildcard in the left-most label immediately preceding the public suffix (e.g. *.com). 
                        The evaluator will configure the reference identifier with a single left-most label (e.g. foo.com) and verify that the connection fails. 
                        The evaluator will configure the reference identifier with two left-most labels (e.g. bar.foo.com) and verify that the connection fails.</h:li>
                    </h:ul>
                    </test>
                    <test>[conditional] If wildcards are not supported by the TOE, the evaluator will present a server certificate containing a wildcard and verify that the connection fails.</test>
                    <test>[conditional] If URI or Service name reference identifiers are supported, the evaluator will configure the DNS name and the service identifier. 
                      The evaluator will present a server certificate containing the correct DNS name and service identifier in the URIName or SRVName fields of the SAN and verify that the connection succeeds. 
                      The evaluator will repeat this test with the wrong service identifier (but correct DNS name) and verify that the connection fails.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
      </sec:sel_fcs> 
      
      <sec:sel_fia title="Identification and Authentication (FIA)">
        
        <ext-comp-def title="Pre-Shared Key Composition" fam-id="FIA_PSK_EXT">
          <fam-behavior>Components in this family describe requirements for the creation and composition of pre-shared keys used to establish trusted communications channels.</fam-behavior> 
        </ext-comp-def> 
        
        <!-- moved from mandatory by TD0277 -->
        <f-component name="Pre-Shared Key Composition" cc-id="fia_psk_ext.1">
		  <depends on="s-radsec-psk"/>
          <consistency-rationale>This SFR defines parameters for pre-shared key generation. The Base-PP supports pre-shared keys as a potential authentication method for IPsec. This PP-Module 
            does not prevent this from being used but does define restrictions on how pre-shared keys may be generated and what constitutes an acceptable key. 
            This may also be used for RadSec, which is outside the original scope of the Base-PP.</consistency-rationale>
          
          <comp-lev>requires the TSF to support pre-shared keys that meet various characteristics for specific communications usage.</comp-lev>
          <management>No specific management functions are identified.</management>
          <audit>There are no auditable events foreseen.</audit>
          <dependencies>FCS_RBG_EXT.1 Random Bit Generation</dependencies>
          
          <f-element id="fel-use-psk">
            <title>The TSF shall be able to use pre-shared keys for <selectables>
              <selectable>RADIUS over TLS (RadSec)</selectable>
              <selectable>IPsec</selectable>
	      <selectable>WPA3-SAE</selectable>
	      <selectable>WPA3-SAE-PK</selectable>
              <selectable>IEEE 802.11 WPA2-PSK</selectable>
              <selectable><assignable>other protocols that use pre-shared keys</assignable></selectable>
            </selectables>. 
            </title>
          </f-element>
          <f-element id="fel-valid-psk">
            <title>The TSF shall be able to accept text-based pre-shared keys that: <h:ul>
              <h:li>are 22 characters and <selectables>
                <selectable><assignable>other supported lengths</assignable></selectable>
                <selectable exclusive="yes">no other lengths</selectable>
              </selectables>;</h:li>
              <h:li>are composed of any combination of upper and lower case letters, numbers, and special
                characters (that include: “!”, “@”, “#”, “$”, “%”, “^”, “&amp;”, “*”, “(“, and “)”).
              </h:li>
            </h:ul>
            </title>
          </f-element>
          <f-element id="fel-get-psk">
            <title>The TSF shall be able to <selectables> 
              <selectable>accept</selectable>
              <selectable>generate using the random bit generator specified in FCS_RBG_EXT.1</selectable>
            </selectables> bit-based pre-shared keys.
            </title>
          
            <note role="application">
	      <h:p>
		This requirement must be included if IPsec or another protocol that uses pre-shared keys is claimed, and pre-shared key authentication is selected 
          (e.g., "Pre-shared Keys" is selected in FCS_IPSEC_EXT.1.13 or "pre-shared keys" is selected in FCS_RADSEC_EXT.1.2). 
          The intent of this requirement is that all protocols will support both text-based and bit-based pre-shared keys.
	      </h:p>
	      <h:p>
		For the length of the text-based pre-shared keys, a common length (22 characters) is required to help
		promote interoperability.
		If other lengths are supported, they should be listed in the assignment;
		this assignment can also specify a range of values (e.g., "lengths from 5 to 55 characters") as well.
	      </h:p>
	      <h:p>
		For <xref to="fel-get-psk"/>, the ST author specifies whether the TSF merely accepts bit-based pre-shared keys
		or is capable of generating them.
		If it generates them, the requirement specifies that they must be
		generated using the RBG provided by the TOE.
	      </h:p>
          </note>
          <aactivity>
	    <TSS>
	      The evaluator will verify that the TSS describes 
	      <h:ol>
		<h:li>the protocols that can use pre-shared keys and that these are consistent with the selections made in <xref to="fel-use-psk"/>.</h:li>
		<h:li>the allowable values for pre-shared keys and that they are consistent with the selections made in <xref to="fel-valid-psk"/>.</h:li>
		<h:li>the way bit-based pre-shared keys are procured and that it is consistent with the selections made in <xref to="fel-get-psk"/>.</h:li>
	      </h:ol>
	    </TSS>
              <Guidance>
		  The evaluator will examine the operational guidance to determine that it provides guidance to
                administrators on the composition of strong text-based pre-shared keys, and (if the selection indicates
                keys of various lengths can be entered) that it provides information on the range of lengths supported.
                The guidance must specify the allowable characters for pre-shared keys, and that list must be a superset of the list contained in FIA_PSK_EXT.1.2.<h:br/><h:br/>
                The evaluator will confirm the operational guidance contains instructions for either entering bit-based
                pre-shared keys for each protocol identified in the requirement or for generating a bit-based pre-shared
                key (or both).<h:br/><h:br/>
	      </Guidance>
              <Tests>The evaluator will also perform the following tests for each protocol (or instantiation of a protocol, if
                performed by a different implementation on the TOE). Note that one or more of these tests can be
                performed with a single test case.
                <testlist>
                  <test>The evaluator will compose a pre-shared key of 22 characters that contains a combination of
                    the allowed characters in accordance with the operational guidance and demonstrates that a successful
                    protocol negotiation can be performed with the key.
                  </test>
                  <test>[conditional]: If the TOE supports pre-shared keys of multiple lengths, the evaluator will repeat
                    Test 1 using the minimum length; the maximum length; a length inside the allowable range; and invalid
                    lengths beyond the supported range (both higher and lower). The minimum, maximum, and included
                    length tests should be successful, and the invalid lengths must be rejected by the TOE.
                  </test>
                  <test>[conditional]: If the TOE does not generate bit-based pre-shared keys, the evaluator will obtain a
                    bit-based pre-shared key of the appropriate length and enter it according to the instructions in the
                    operational guidance. The evaluator will then demonstrate that a successful protocol negotiation can
                    be performed with the key.</test>
                  <test>[conditional]: If the TOE does generate bit-based pre-shared keys, the evaluator will generate a
                    bit-based pre-shared key of the appropriate length and use it according to the instructions in the
                    operational guidance. The evaluator will then demonstrate that a successful protocol negotiation can
                    be performed with the key.
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </sec:sel_fia> 

    </sel-sfrs>
    <obj-sfrs>
    </obj-sfrs>
    <impl-dep-sfrs></impl-dep-sfrs>
  </sec:Security_Requirements>
  
  <appendix title="Implicitly Satisfied Requirements" id="satisfiedreqs">
    This PP-Module has no implicitly satisfied requirements. All SFR dependencies are explicitly met either through SFRs defined by the PP-Module or inherited from the Base-PP. 
  </appendix>
  
  <appendix title="Allocation of Requirements in Distributed TOEs" id="allocation">
    
    For a distributed TOE, the security functional requirements in this PP-Module need to be met by the
    TOE as a whole, but not all SFRs will necessarily be implemented by all components. The
    following categories are defined in order to specify when each SFR must be implemented by a
    component: <h:ul>
      <h:li><h:b>All Components ("All")</h:b> &#8212;All components that comprise the distributed TOE must
        independently satisfy the requirement.</h:li>
      <h:li><h:b>At least one Component ("One")</h:b> &#8212;This requirement must be fulfilled by at least one
        component within the distributed TOE.</h:li>
      <h:li><h:b>Feature Dependent ("Feature Dependent")</h:b> &#8212; These requirements will only be
        fulfilled where the feature is implemented by the distributed TOE component (note
        that the requirement to meet the PP-Module as a whole requires that at least one component
        implements these requirements if they are claimed by the TOE).</h:li></h:ul>
    The table below specifies how each of the SFRs in this PP-Module must be met, using the categories above.
    
    <h:table>
      <h:tr class="header">
        <h:td>Requirement</h:td>
        <h:td>Description</h:td>
        <h:td>Distributed TOE SFR Allocation</h:td>
      </h:tr>
      <!--  
      <h:tr>
        <h:td>FCS_COP.1/DataEncryption</h:td>
        <h:td>Cryptographic Operation (AES Data Encryption/Decryption)</h:td>
        <h:td>All</h:td>
      </h:tr>
     <h:tr>
     <h:td>FPT_TST_EXT.1</h:td>
       <h:td>TSF Testing</h:td>
       <h:td>All</h:td> 
     </h:tr>
      <h:tr>
        <h:td>FTP_ITC.1</h:td>
        <h:td>Inter-TSF Trusted Channel</h:td>
        <h:td>One</h:td>
        </h:tr>
     -->
      <h:tr>
        <h:td>FAU_GEN.1/WLAN</h:td>
        <h:td>Audit Data Generation</h:td>
        <h:td>All</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_CKM.1/WPA</h:td>
        <h:td>Cryptographic Key Generation (Symmetric Keys for WPA2 Connections)</h:td>
        <h:td>One</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_CKM.2/GTK</h:td>
        <h:td>Cryptographic Key Distribution (GTK)</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_CKM.2/PMK</h:td>
        <h:td>Cryptographic Key Distribution (PMK)</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FIA_8021X_EXT.1</h:td>
        <h:td>802.1X Port Access Entity (Authenticator) Authentication</h:td>
        <h:td>One</h:td>
      </h:tr>
      <h:tr>
        <h:td>FIA_UAU.6</h:td>
        <h:td>Re-Authenticating</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FMT_SMF.1/AccessSystem</h:td>
        <h:td>Specification of Management Functions</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FMT_SMR_EXT.1</h:td>
        <h:td>No Administration from Client</h:td>
        <h:td>All</h:td>
      </h:tr>
      <h:tr>
        <h:td>FPT_FLS.1</h:td>
        <h:td>Failure with Preservation of Secure State</h:td>
        <h:td>All</h:td>
      </h:tr>
      <h:tr>
        <h:td>FTA_TSE.1</h:td>
        <h:td>TOE Session Establishment</h:td>
        <h:td>All</h:td>
      </h:tr>
      <h:tr>
        <h:td>FTP_ITC.1/Client</h:td>
        <h:td>Inter-TSF Trusted Channel (WLAN Client Communications)</h:td>
        <h:td>All</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_CKM.2/DISTRIB</h:td>
        <h:td>Cryptographic Key Distribution (802.11 Keys)</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_RADSEC_EXT.1</h:td>
        <h:td>RadSec</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_RADSEC_EXT.2</h:td>
        <h:td>RadSec using Pre-Shared Keys</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FCS_RADSEC_EXT.3</h:td>
        <h:td>RadSec using Pre-Shared Keys and RSA</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
      <h:tr>
        <h:td>FIA_PSK_EXT.1</h:td>
        <h:td>Pre-Shared Key Composition</h:td>
        <h:td>Feature Dependent</h:td>
      </h:tr>
    </h:table>
    
  </appendix>
  
  <appendix title="Entropy Documentation and Assessment" id="EAR">
    The TOE does not require any additional supplementary information to describe its entropy sources beyond the requirements outlined in the Base-PP.  
  </appendix>
  
  <bibliography>
    <cc-entry/>
    
    
    <entry id="bibNDcPP">
      <tag>NDcPP</tag>
      <description>
        <h:a href="https://www.niap-ccevs.org/MMO/PP/CPP_ND_V2.2E.pdf">collaborative Protection Profile for Network Devices</h:a>, Version 2.2e, March 23, 2020
      </description>
    </entry>
    
    <entry id="bibNDSD">
      <tag>NDcPP SD</tag>
      <description>
        <h:a href="https://www.niap-ccevs.org/MMO/PP/CPP_ND_V2.2-SD.pdf">Supporting Document - Evaluation Activities for Network Device cPP</h:a>, Version 2.2, December 2019
      </description>
    </entry>

  </bibliography>
</Module>
